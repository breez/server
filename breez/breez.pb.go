// Code generated by protoc-gen-go. DO NOT EDIT.
// source: breez.proto

package breez

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetSwapPaymentReply_SwapError int32

const (
	GetSwapPaymentReply_NO_ERROR                GetSwapPaymentReply_SwapError = 0
	GetSwapPaymentReply_FUNDS_EXCEED_LIMIT      GetSwapPaymentReply_SwapError = 1
	GetSwapPaymentReply_TX_TOO_SMALL            GetSwapPaymentReply_SwapError = 2
	GetSwapPaymentReply_INVOICE_AMOUNT_MISMATCH GetSwapPaymentReply_SwapError = 3
	GetSwapPaymentReply_SWAP_EXPIRED            GetSwapPaymentReply_SwapError = 4
)

var GetSwapPaymentReply_SwapError_name = map[int32]string{
	0: "NO_ERROR",
	1: "FUNDS_EXCEED_LIMIT",
	2: "TX_TOO_SMALL",
	3: "INVOICE_AMOUNT_MISMATCH",
	4: "SWAP_EXPIRED",
}

var GetSwapPaymentReply_SwapError_value = map[string]int32{
	"NO_ERROR":                0,
	"FUNDS_EXCEED_LIMIT":      1,
	"TX_TOO_SMALL":            2,
	"INVOICE_AMOUNT_MISMATCH": 3,
	"SWAP_EXPIRED":            4,
}

func (x GetSwapPaymentReply_SwapError) String() string {
	return proto.EnumName(GetSwapPaymentReply_SwapError_name, int32(x))
}

func (GetSwapPaymentReply_SwapError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{34, 0}
}

type JoinCTPSessionRequest_PartyType int32

const (
	JoinCTPSessionRequest_PAYER JoinCTPSessionRequest_PartyType = 0
	JoinCTPSessionRequest_PAYEE JoinCTPSessionRequest_PartyType = 1
)

var JoinCTPSessionRequest_PartyType_name = map[int32]string{
	0: "PAYER",
	1: "PAYEE",
}

var JoinCTPSessionRequest_PartyType_value = map[string]int32{
	"PAYER": 0,
	"PAYEE": 1,
}

func (x JoinCTPSessionRequest_PartyType) String() string {
	return proto.EnumName(JoinCTPSessionRequest_PartyType_name, int32(x))
}

func (JoinCTPSessionRequest_PartyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{51, 0}
}

type RegisterTransactionConfirmationRequest_NotificationType int32

const (
	RegisterTransactionConfirmationRequest_READY_RECEIVE_PAYMENT RegisterTransactionConfirmationRequest_NotificationType = 0
	RegisterTransactionConfirmationRequest_CHANNEL_OPENED        RegisterTransactionConfirmationRequest_NotificationType = 1
)

var RegisterTransactionConfirmationRequest_NotificationType_name = map[int32]string{
	0: "READY_RECEIVE_PAYMENT",
	1: "CHANNEL_OPENED",
}

var RegisterTransactionConfirmationRequest_NotificationType_value = map[string]int32{
	"READY_RECEIVE_PAYMENT": 0,
	"CHANNEL_OPENED":        1,
}

func (x RegisterTransactionConfirmationRequest_NotificationType) String() string {
	return proto.EnumName(RegisterTransactionConfirmationRequest_NotificationType_name, int32(x))
}

func (RegisterTransactionConfirmationRequest_NotificationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{55, 0}
}

type SignUrlRequest struct {
	BaseUrl              string   `protobuf:"bytes,1,opt,name=baseUrl,json=base_url,proto3" json:"baseUrl,omitempty"`
	QueryString          string   `protobuf:"bytes,2,opt,name=queryString,json=query_string,proto3" json:"queryString,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignUrlRequest) Reset()         { *m = SignUrlRequest{} }
func (m *SignUrlRequest) String() string { return proto.CompactTextString(m) }
func (*SignUrlRequest) ProtoMessage()    {}
func (*SignUrlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{0}
}

func (m *SignUrlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignUrlRequest.Unmarshal(m, b)
}
func (m *SignUrlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignUrlRequest.Marshal(b, m, deterministic)
}
func (m *SignUrlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignUrlRequest.Merge(m, src)
}
func (m *SignUrlRequest) XXX_Size() int {
	return xxx_messageInfo_SignUrlRequest.Size(m)
}
func (m *SignUrlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignUrlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignUrlRequest proto.InternalMessageInfo

func (m *SignUrlRequest) GetBaseUrl() string {
	if m != nil {
		return m.BaseUrl
	}
	return ""
}

func (m *SignUrlRequest) GetQueryString() string {
	if m != nil {
		return m.QueryString
	}
	return ""
}

type SignUrlResponse struct {
	FullUrl              string   `protobuf:"bytes,1,opt,name=fullUrl,json=full_url,proto3" json:"fullUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignUrlResponse) Reset()         { *m = SignUrlResponse{} }
func (m *SignUrlResponse) String() string { return proto.CompactTextString(m) }
func (*SignUrlResponse) ProtoMessage()    {}
func (*SignUrlResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{1}
}

func (m *SignUrlResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignUrlResponse.Unmarshal(m, b)
}
func (m *SignUrlResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignUrlResponse.Marshal(b, m, deterministic)
}
func (m *SignUrlResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignUrlResponse.Merge(m, src)
}
func (m *SignUrlResponse) XXX_Size() int {
	return xxx_messageInfo_SignUrlResponse.Size(m)
}
func (m *SignUrlResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignUrlResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignUrlResponse proto.InternalMessageInfo

func (m *SignUrlResponse) GetFullUrl() string {
	if m != nil {
		return m.FullUrl
	}
	return ""
}

type InactiveNotifyRequest struct {
	Pubkey               []byte   `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Days                 int32    `protobuf:"varint,2,opt,name=days,proto3" json:"days,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InactiveNotifyRequest) Reset()         { *m = InactiveNotifyRequest{} }
func (m *InactiveNotifyRequest) String() string { return proto.CompactTextString(m) }
func (*InactiveNotifyRequest) ProtoMessage()    {}
func (*InactiveNotifyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{2}
}

func (m *InactiveNotifyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InactiveNotifyRequest.Unmarshal(m, b)
}
func (m *InactiveNotifyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InactiveNotifyRequest.Marshal(b, m, deterministic)
}
func (m *InactiveNotifyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InactiveNotifyRequest.Merge(m, src)
}
func (m *InactiveNotifyRequest) XXX_Size() int {
	return xxx_messageInfo_InactiveNotifyRequest.Size(m)
}
func (m *InactiveNotifyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InactiveNotifyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InactiveNotifyRequest proto.InternalMessageInfo

func (m *InactiveNotifyRequest) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *InactiveNotifyRequest) GetDays() int32 {
	if m != nil {
		return m.Days
	}
	return 0
}

type InactiveNotifyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InactiveNotifyResponse) Reset()         { *m = InactiveNotifyResponse{} }
func (m *InactiveNotifyResponse) String() string { return proto.CompactTextString(m) }
func (*InactiveNotifyResponse) ProtoMessage()    {}
func (*InactiveNotifyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{3}
}

func (m *InactiveNotifyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InactiveNotifyResponse.Unmarshal(m, b)
}
func (m *InactiveNotifyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InactiveNotifyResponse.Marshal(b, m, deterministic)
}
func (m *InactiveNotifyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InactiveNotifyResponse.Merge(m, src)
}
func (m *InactiveNotifyResponse) XXX_Size() int {
	return xxx_messageInfo_InactiveNotifyResponse.Size(m)
}
func (m *InactiveNotifyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InactiveNotifyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InactiveNotifyResponse proto.InternalMessageInfo

type ReceiverInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiverInfoRequest) Reset()         { *m = ReceiverInfoRequest{} }
func (m *ReceiverInfoRequest) String() string { return proto.CompactTextString(m) }
func (*ReceiverInfoRequest) ProtoMessage()    {}
func (*ReceiverInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{4}
}

func (m *ReceiverInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiverInfoRequest.Unmarshal(m, b)
}
func (m *ReceiverInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiverInfoRequest.Marshal(b, m, deterministic)
}
func (m *ReceiverInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiverInfoRequest.Merge(m, src)
}
func (m *ReceiverInfoRequest) XXX_Size() int {
	return xxx_messageInfo_ReceiverInfoRequest.Size(m)
}
func (m *ReceiverInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiverInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiverInfoRequest proto.InternalMessageInfo

type ReceiverInfoReply struct {
	Pubkey               string   `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiverInfoReply) Reset()         { *m = ReceiverInfoReply{} }
func (m *ReceiverInfoReply) String() string { return proto.CompactTextString(m) }
func (*ReceiverInfoReply) ProtoMessage()    {}
func (*ReceiverInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{5}
}

func (m *ReceiverInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiverInfoReply.Unmarshal(m, b)
}
func (m *ReceiverInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiverInfoReply.Marshal(b, m, deterministic)
}
func (m *ReceiverInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiverInfoReply.Merge(m, src)
}
func (m *ReceiverInfoReply) XXX_Size() int {
	return xxx_messageInfo_ReceiverInfoReply.Size(m)
}
func (m *ReceiverInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiverInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiverInfoReply proto.InternalMessageInfo

func (m *ReceiverInfoReply) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

type RatesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RatesRequest) Reset()         { *m = RatesRequest{} }
func (m *RatesRequest) String() string { return proto.CompactTextString(m) }
func (*RatesRequest) ProtoMessage()    {}
func (*RatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{6}
}

func (m *RatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RatesRequest.Unmarshal(m, b)
}
func (m *RatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RatesRequest.Marshal(b, m, deterministic)
}
func (m *RatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RatesRequest.Merge(m, src)
}
func (m *RatesRequest) XXX_Size() int {
	return xxx_messageInfo_RatesRequest.Size(m)
}
func (m *RatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RatesRequest proto.InternalMessageInfo

type Rate struct {
	Coin                 string   `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
	Value                float64  `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rate) Reset()         { *m = Rate{} }
func (m *Rate) String() string { return proto.CompactTextString(m) }
func (*Rate) ProtoMessage()    {}
func (*Rate) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{7}
}

func (m *Rate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rate.Unmarshal(m, b)
}
func (m *Rate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rate.Marshal(b, m, deterministic)
}
func (m *Rate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rate.Merge(m, src)
}
func (m *Rate) XXX_Size() int {
	return xxx_messageInfo_Rate.Size(m)
}
func (m *Rate) XXX_DiscardUnknown() {
	xxx_messageInfo_Rate.DiscardUnknown(m)
}

var xxx_messageInfo_Rate proto.InternalMessageInfo

func (m *Rate) GetCoin() string {
	if m != nil {
		return m.Coin
	}
	return ""
}

func (m *Rate) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type RatesReply struct {
	Rates                []*Rate  `protobuf:"bytes,1,rep,name=rates,proto3" json:"rates,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RatesReply) Reset()         { *m = RatesReply{} }
func (m *RatesReply) String() string { return proto.CompactTextString(m) }
func (*RatesReply) ProtoMessage()    {}
func (*RatesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{8}
}

func (m *RatesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RatesReply.Unmarshal(m, b)
}
func (m *RatesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RatesReply.Marshal(b, m, deterministic)
}
func (m *RatesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RatesReply.Merge(m, src)
}
func (m *RatesReply) XXX_Size() int {
	return xxx_messageInfo_RatesReply.Size(m)
}
func (m *RatesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RatesReply.DiscardUnknown(m)
}

var xxx_messageInfo_RatesReply proto.InternalMessageInfo

func (m *RatesReply) GetRates() []*Rate {
	if m != nil {
		return m.Rates
	}
	return nil
}

type LSPListRequest struct {
	/// The identity pubkey of the client
	Pubkey               string   `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LSPListRequest) Reset()         { *m = LSPListRequest{} }
func (m *LSPListRequest) String() string { return proto.CompactTextString(m) }
func (*LSPListRequest) ProtoMessage()    {}
func (*LSPListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{9}
}

func (m *LSPListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LSPListRequest.Unmarshal(m, b)
}
func (m *LSPListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LSPListRequest.Marshal(b, m, deterministic)
}
func (m *LSPListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LSPListRequest.Merge(m, src)
}
func (m *LSPListRequest) XXX_Size() int {
	return xxx_messageInfo_LSPListRequest.Size(m)
}
func (m *LSPListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LSPListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LSPListRequest proto.InternalMessageInfo

func (m *LSPListRequest) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

type LSPInformation struct {
	/// The name of of lsp
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	/// The name of of lsp
	WidgetUrl string `protobuf:"bytes,2,opt,name=widget_url,proto3" json:"widget_url,omitempty"`
	/// The identity pubkey of the Lightning node
	Pubkey string `protobuf:"bytes,3,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	/// The network location of the lightning node, e.g. `12.34.56.78:9012` or `localhost:10011`
	Host string `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	/// The channel capacity in satoshis
	ChannelCapacity int64 `protobuf:"varint,5,opt,name=channel_capacity,proto3" json:"channel_capacity,omitempty"`
	/// The target number of blocks that the funding transaction should be confirmed by.
	TargetConf int32 `protobuf:"varint,6,opt,name=target_conf,proto3" json:"target_conf,omitempty"`
	/// The base fee charged regardless of the number of milli-satoshis sent.
	BaseFeeMsat int64 `protobuf:"varint,7,opt,name=base_fee_msat,proto3" json:"base_fee_msat,omitempty"`
	/// The effective fee rate in milli-satoshis. The precision of this value goes up to 6 decimal places, so 1e-6.
	FeeRate float64 `protobuf:"fixed64,8,opt,name=fee_rate,proto3" json:"fee_rate,omitempty"`
	/// The required timelock delta for HTLCs forwarded over the channel.
	TimeLockDelta uint32 `protobuf:"varint,9,opt,name=time_lock_delta,proto3" json:"time_lock_delta,omitempty"`
	/// The minimum value in millisatoshi we will require for incoming HTLCs on the channel.
	MinHtlcMsat         int64  `protobuf:"varint,10,opt,name=min_htlc_msat,proto3" json:"min_htlc_msat,omitempty"`
	ChannelFeePermyriad int64  `protobuf:"varint,11,opt,name=channel_fee_permyriad,json=channelFeePermyriad,proto3" json:"channel_fee_permyriad,omitempty"`
	LspPubkey           []byte `protobuf:"bytes,12,opt,name=lsp_pubkey,json=lspPubkey,proto3" json:"lsp_pubkey,omitempty"`
	// The channel can be closed if not used this duration in seconds.
	MaxInactiveDuration   int64    `protobuf:"varint,13,opt,name=max_inactive_duration,json=maxInactiveDuration,proto3" json:"max_inactive_duration,omitempty"`
	ChannelMinimumFeeMsat int64    `protobuf:"varint,14,opt,name=channel_minimum_fee_msat,json=channelMinimumFeeMsat,proto3" json:"channel_minimum_fee_msat,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *LSPInformation) Reset()         { *m = LSPInformation{} }
func (m *LSPInformation) String() string { return proto.CompactTextString(m) }
func (*LSPInformation) ProtoMessage()    {}
func (*LSPInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{10}
}

func (m *LSPInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LSPInformation.Unmarshal(m, b)
}
func (m *LSPInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LSPInformation.Marshal(b, m, deterministic)
}
func (m *LSPInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LSPInformation.Merge(m, src)
}
func (m *LSPInformation) XXX_Size() int {
	return xxx_messageInfo_LSPInformation.Size(m)
}
func (m *LSPInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_LSPInformation.DiscardUnknown(m)
}

var xxx_messageInfo_LSPInformation proto.InternalMessageInfo

func (m *LSPInformation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LSPInformation) GetWidgetUrl() string {
	if m != nil {
		return m.WidgetUrl
	}
	return ""
}

func (m *LSPInformation) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *LSPInformation) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *LSPInformation) GetChannelCapacity() int64 {
	if m != nil {
		return m.ChannelCapacity
	}
	return 0
}

func (m *LSPInformation) GetTargetConf() int32 {
	if m != nil {
		return m.TargetConf
	}
	return 0
}

func (m *LSPInformation) GetBaseFeeMsat() int64 {
	if m != nil {
		return m.BaseFeeMsat
	}
	return 0
}

func (m *LSPInformation) GetFeeRate() float64 {
	if m != nil {
		return m.FeeRate
	}
	return 0
}

func (m *LSPInformation) GetTimeLockDelta() uint32 {
	if m != nil {
		return m.TimeLockDelta
	}
	return 0
}

func (m *LSPInformation) GetMinHtlcMsat() int64 {
	if m != nil {
		return m.MinHtlcMsat
	}
	return 0
}

func (m *LSPInformation) GetChannelFeePermyriad() int64 {
	if m != nil {
		return m.ChannelFeePermyriad
	}
	return 0
}

func (m *LSPInformation) GetLspPubkey() []byte {
	if m != nil {
		return m.LspPubkey
	}
	return nil
}

func (m *LSPInformation) GetMaxInactiveDuration() int64 {
	if m != nil {
		return m.MaxInactiveDuration
	}
	return 0
}

func (m *LSPInformation) GetChannelMinimumFeeMsat() int64 {
	if m != nil {
		return m.ChannelMinimumFeeMsat
	}
	return 0
}

type LSPListReply struct {
	Lsps                 map[string]*LSPInformation `protobuf:"bytes,1,rep,name=lsps,proto3" json:"lsps,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *LSPListReply) Reset()         { *m = LSPListReply{} }
func (m *LSPListReply) String() string { return proto.CompactTextString(m) }
func (*LSPListReply) ProtoMessage()    {}
func (*LSPListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{11}
}

func (m *LSPListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LSPListReply.Unmarshal(m, b)
}
func (m *LSPListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LSPListReply.Marshal(b, m, deterministic)
}
func (m *LSPListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LSPListReply.Merge(m, src)
}
func (m *LSPListReply) XXX_Size() int {
	return xxx_messageInfo_LSPListReply.Size(m)
}
func (m *LSPListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LSPListReply.DiscardUnknown(m)
}

var xxx_messageInfo_LSPListReply proto.InternalMessageInfo

func (m *LSPListReply) GetLsps() map[string]*LSPInformation {
	if m != nil {
		return m.Lsps
	}
	return nil
}

type RegisterPaymentRequest struct {
	LspId                string   `protobuf:"bytes,1,opt,name=lsp_id,json=lspId,proto3" json:"lsp_id,omitempty"`
	Blob                 []byte   `protobuf:"bytes,3,opt,name=blob,proto3" json:"blob,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterPaymentRequest) Reset()         { *m = RegisterPaymentRequest{} }
func (m *RegisterPaymentRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterPaymentRequest) ProtoMessage()    {}
func (*RegisterPaymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{12}
}

func (m *RegisterPaymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterPaymentRequest.Unmarshal(m, b)
}
func (m *RegisterPaymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterPaymentRequest.Marshal(b, m, deterministic)
}
func (m *RegisterPaymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterPaymentRequest.Merge(m, src)
}
func (m *RegisterPaymentRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterPaymentRequest.Size(m)
}
func (m *RegisterPaymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterPaymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterPaymentRequest proto.InternalMessageInfo

func (m *RegisterPaymentRequest) GetLspId() string {
	if m != nil {
		return m.LspId
	}
	return ""
}

func (m *RegisterPaymentRequest) GetBlob() []byte {
	if m != nil {
		return m.Blob
	}
	return nil
}

type RegisterPaymentReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterPaymentReply) Reset()         { *m = RegisterPaymentReply{} }
func (m *RegisterPaymentReply) String() string { return proto.CompactTextString(m) }
func (*RegisterPaymentReply) ProtoMessage()    {}
func (*RegisterPaymentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{13}
}

func (m *RegisterPaymentReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterPaymentReply.Unmarshal(m, b)
}
func (m *RegisterPaymentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterPaymentReply.Marshal(b, m, deterministic)
}
func (m *RegisterPaymentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterPaymentReply.Merge(m, src)
}
func (m *RegisterPaymentReply) XXX_Size() int {
	return xxx_messageInfo_RegisterPaymentReply.Size(m)
}
func (m *RegisterPaymentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterPaymentReply.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterPaymentReply proto.InternalMessageInfo

type CheckChannelsRequest struct {
	LspId                string   `protobuf:"bytes,1,opt,name=lsp_id,json=lspId,proto3" json:"lsp_id,omitempty"`
	Blob                 []byte   `protobuf:"bytes,2,opt,name=blob,proto3" json:"blob,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckChannelsRequest) Reset()         { *m = CheckChannelsRequest{} }
func (m *CheckChannelsRequest) String() string { return proto.CompactTextString(m) }
func (*CheckChannelsRequest) ProtoMessage()    {}
func (*CheckChannelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{14}
}

func (m *CheckChannelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckChannelsRequest.Unmarshal(m, b)
}
func (m *CheckChannelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckChannelsRequest.Marshal(b, m, deterministic)
}
func (m *CheckChannelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckChannelsRequest.Merge(m, src)
}
func (m *CheckChannelsRequest) XXX_Size() int {
	return xxx_messageInfo_CheckChannelsRequest.Size(m)
}
func (m *CheckChannelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckChannelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckChannelsRequest proto.InternalMessageInfo

func (m *CheckChannelsRequest) GetLspId() string {
	if m != nil {
		return m.LspId
	}
	return ""
}

func (m *CheckChannelsRequest) GetBlob() []byte {
	if m != nil {
		return m.Blob
	}
	return nil
}

type CheckChannelsReply struct {
	Blob                 []byte   `protobuf:"bytes,2,opt,name=blob,proto3" json:"blob,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckChannelsReply) Reset()         { *m = CheckChannelsReply{} }
func (m *CheckChannelsReply) String() string { return proto.CompactTextString(m) }
func (*CheckChannelsReply) ProtoMessage()    {}
func (*CheckChannelsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{15}
}

func (m *CheckChannelsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckChannelsReply.Unmarshal(m, b)
}
func (m *CheckChannelsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckChannelsReply.Marshal(b, m, deterministic)
}
func (m *CheckChannelsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckChannelsReply.Merge(m, src)
}
func (m *CheckChannelsReply) XXX_Size() int {
	return xxx_messageInfo_CheckChannelsReply.Size(m)
}
func (m *CheckChannelsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckChannelsReply.DiscardUnknown(m)
}

var xxx_messageInfo_CheckChannelsReply proto.InternalMessageInfo

func (m *CheckChannelsReply) GetBlob() []byte {
	if m != nil {
		return m.Blob
	}
	return nil
}

type OpenLSPChannelRequest struct {
	LspId                string   `protobuf:"bytes,1,opt,name=lsp_id,json=lspId,proto3" json:"lsp_id,omitempty"`
	Pubkey               string   `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenLSPChannelRequest) Reset()         { *m = OpenLSPChannelRequest{} }
func (m *OpenLSPChannelRequest) String() string { return proto.CompactTextString(m) }
func (*OpenLSPChannelRequest) ProtoMessage()    {}
func (*OpenLSPChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{16}
}

func (m *OpenLSPChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenLSPChannelRequest.Unmarshal(m, b)
}
func (m *OpenLSPChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenLSPChannelRequest.Marshal(b, m, deterministic)
}
func (m *OpenLSPChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenLSPChannelRequest.Merge(m, src)
}
func (m *OpenLSPChannelRequest) XXX_Size() int {
	return xxx_messageInfo_OpenLSPChannelRequest.Size(m)
}
func (m *OpenLSPChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenLSPChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenLSPChannelRequest proto.InternalMessageInfo

func (m *OpenLSPChannelRequest) GetLspId() string {
	if m != nil {
		return m.LspId
	}
	return ""
}

func (m *OpenLSPChannelRequest) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

type OpenLSPChannelReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenLSPChannelReply) Reset()         { *m = OpenLSPChannelReply{} }
func (m *OpenLSPChannelReply) String() string { return proto.CompactTextString(m) }
func (*OpenLSPChannelReply) ProtoMessage()    {}
func (*OpenLSPChannelReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{17}
}

func (m *OpenLSPChannelReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenLSPChannelReply.Unmarshal(m, b)
}
func (m *OpenLSPChannelReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenLSPChannelReply.Marshal(b, m, deterministic)
}
func (m *OpenLSPChannelReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenLSPChannelReply.Merge(m, src)
}
func (m *OpenLSPChannelReply) XXX_Size() int {
	return xxx_messageInfo_OpenLSPChannelReply.Size(m)
}
func (m *OpenLSPChannelReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenLSPChannelReply.DiscardUnknown(m)
}

var xxx_messageInfo_OpenLSPChannelReply proto.InternalMessageInfo

type OpenChannelRequest struct {
	PubKey               string   `protobuf:"bytes,1,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	NotificationToken    string   `protobuf:"bytes,2,opt,name=notificationToken,proto3" json:"notificationToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenChannelRequest) Reset()         { *m = OpenChannelRequest{} }
func (m *OpenChannelRequest) String() string { return proto.CompactTextString(m) }
func (*OpenChannelRequest) ProtoMessage()    {}
func (*OpenChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{18}
}

func (m *OpenChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenChannelRequest.Unmarshal(m, b)
}
func (m *OpenChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenChannelRequest.Marshal(b, m, deterministic)
}
func (m *OpenChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenChannelRequest.Merge(m, src)
}
func (m *OpenChannelRequest) XXX_Size() int {
	return xxx_messageInfo_OpenChannelRequest.Size(m)
}
func (m *OpenChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenChannelRequest proto.InternalMessageInfo

func (m *OpenChannelRequest) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

func (m *OpenChannelRequest) GetNotificationToken() string {
	if m != nil {
		return m.NotificationToken
	}
	return ""
}

type OpenChannelReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenChannelReply) Reset()         { *m = OpenChannelReply{} }
func (m *OpenChannelReply) String() string { return proto.CompactTextString(m) }
func (*OpenChannelReply) ProtoMessage()    {}
func (*OpenChannelReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{19}
}

func (m *OpenChannelReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenChannelReply.Unmarshal(m, b)
}
func (m *OpenChannelReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenChannelReply.Marshal(b, m, deterministic)
}
func (m *OpenChannelReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenChannelReply.Merge(m, src)
}
func (m *OpenChannelReply) XXX_Size() int {
	return xxx_messageInfo_OpenChannelReply.Size(m)
}
func (m *OpenChannelReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenChannelReply.DiscardUnknown(m)
}

var xxx_messageInfo_OpenChannelReply proto.InternalMessageInfo

type OpenPublicChannelRequest struct {
	Pubkey               string   `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenPublicChannelRequest) Reset()         { *m = OpenPublicChannelRequest{} }
func (m *OpenPublicChannelRequest) String() string { return proto.CompactTextString(m) }
func (*OpenPublicChannelRequest) ProtoMessage()    {}
func (*OpenPublicChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{20}
}

func (m *OpenPublicChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenPublicChannelRequest.Unmarshal(m, b)
}
func (m *OpenPublicChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenPublicChannelRequest.Marshal(b, m, deterministic)
}
func (m *OpenPublicChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenPublicChannelRequest.Merge(m, src)
}
func (m *OpenPublicChannelRequest) XXX_Size() int {
	return xxx_messageInfo_OpenPublicChannelRequest.Size(m)
}
func (m *OpenPublicChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenPublicChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenPublicChannelRequest proto.InternalMessageInfo

func (m *OpenPublicChannelRequest) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

type OpenPublicChannelReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenPublicChannelReply) Reset()         { *m = OpenPublicChannelReply{} }
func (m *OpenPublicChannelReply) String() string { return proto.CompactTextString(m) }
func (*OpenPublicChannelReply) ProtoMessage()    {}
func (*OpenPublicChannelReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{21}
}

func (m *OpenPublicChannelReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenPublicChannelReply.Unmarshal(m, b)
}
func (m *OpenPublicChannelReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenPublicChannelReply.Marshal(b, m, deterministic)
}
func (m *OpenPublicChannelReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenPublicChannelReply.Merge(m, src)
}
func (m *OpenPublicChannelReply) XXX_Size() int {
	return xxx_messageInfo_OpenPublicChannelReply.Size(m)
}
func (m *OpenPublicChannelReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenPublicChannelReply.DiscardUnknown(m)
}

var xxx_messageInfo_OpenPublicChannelReply proto.InternalMessageInfo

type Captcha struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Image                []byte   `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Captcha) Reset()         { *m = Captcha{} }
func (m *Captcha) String() string { return proto.CompactTextString(m) }
func (*Captcha) ProtoMessage()    {}
func (*Captcha) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{22}
}

func (m *Captcha) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Captcha.Unmarshal(m, b)
}
func (m *Captcha) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Captcha.Marshal(b, m, deterministic)
}
func (m *Captcha) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Captcha.Merge(m, src)
}
func (m *Captcha) XXX_Size() int {
	return xxx_messageInfo_Captcha.Size(m)
}
func (m *Captcha) XXX_DiscardUnknown() {
	xxx_messageInfo_Captcha.DiscardUnknown(m)
}

var xxx_messageInfo_Captcha proto.InternalMessageInfo

func (m *Captcha) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Captcha) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

type UpdateChannelPolicyRequest struct {
	PubKey               string   `protobuf:"bytes,1,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateChannelPolicyRequest) Reset()         { *m = UpdateChannelPolicyRequest{} }
func (m *UpdateChannelPolicyRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateChannelPolicyRequest) ProtoMessage()    {}
func (*UpdateChannelPolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{23}
}

func (m *UpdateChannelPolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateChannelPolicyRequest.Unmarshal(m, b)
}
func (m *UpdateChannelPolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateChannelPolicyRequest.Marshal(b, m, deterministic)
}
func (m *UpdateChannelPolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateChannelPolicyRequest.Merge(m, src)
}
func (m *UpdateChannelPolicyRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateChannelPolicyRequest.Size(m)
}
func (m *UpdateChannelPolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateChannelPolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateChannelPolicyRequest proto.InternalMessageInfo

func (m *UpdateChannelPolicyRequest) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

type UpdateChannelPolicyReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateChannelPolicyReply) Reset()         { *m = UpdateChannelPolicyReply{} }
func (m *UpdateChannelPolicyReply) String() string { return proto.CompactTextString(m) }
func (*UpdateChannelPolicyReply) ProtoMessage()    {}
func (*UpdateChannelPolicyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{24}
}

func (m *UpdateChannelPolicyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateChannelPolicyReply.Unmarshal(m, b)
}
func (m *UpdateChannelPolicyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateChannelPolicyReply.Marshal(b, m, deterministic)
}
func (m *UpdateChannelPolicyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateChannelPolicyReply.Merge(m, src)
}
func (m *UpdateChannelPolicyReply) XXX_Size() int {
	return xxx_messageInfo_UpdateChannelPolicyReply.Size(m)
}
func (m *UpdateChannelPolicyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateChannelPolicyReply.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateChannelPolicyReply proto.InternalMessageInfo

type AddFundInitRequest struct {
	NodeID               string   `protobuf:"bytes,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	NotificationToken    string   `protobuf:"bytes,2,opt,name=notificationToken,proto3" json:"notificationToken,omitempty"`
	Pubkey               []byte   `protobuf:"bytes,3,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Hash                 []byte   `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFundInitRequest) Reset()         { *m = AddFundInitRequest{} }
func (m *AddFundInitRequest) String() string { return proto.CompactTextString(m) }
func (*AddFundInitRequest) ProtoMessage()    {}
func (*AddFundInitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{25}
}

func (m *AddFundInitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFundInitRequest.Unmarshal(m, b)
}
func (m *AddFundInitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFundInitRequest.Marshal(b, m, deterministic)
}
func (m *AddFundInitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFundInitRequest.Merge(m, src)
}
func (m *AddFundInitRequest) XXX_Size() int {
	return xxx_messageInfo_AddFundInitRequest.Size(m)
}
func (m *AddFundInitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFundInitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddFundInitRequest proto.InternalMessageInfo

func (m *AddFundInitRequest) GetNodeID() string {
	if m != nil {
		return m.NodeID
	}
	return ""
}

func (m *AddFundInitRequest) GetNotificationToken() string {
	if m != nil {
		return m.NotificationToken
	}
	return ""
}

func (m *AddFundInitRequest) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *AddFundInitRequest) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type AddFundInitReply struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Pubkey               []byte   `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	LockHeight           int64    `protobuf:"varint,3,opt,name=lockHeight,proto3" json:"lockHeight,omitempty"`
	MaxAllowedDeposit    int64    `protobuf:"varint,4,opt,name=maxAllowedDeposit,proto3" json:"maxAllowedDeposit,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,5,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	RequiredReserve      int64    `protobuf:"varint,6,opt,name=requiredReserve,proto3" json:"requiredReserve,omitempty"`
	MinAllowedDeposit    int64    `protobuf:"varint,7,opt,name=minAllowedDeposit,proto3" json:"minAllowedDeposit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFundInitReply) Reset()         { *m = AddFundInitReply{} }
func (m *AddFundInitReply) String() string { return proto.CompactTextString(m) }
func (*AddFundInitReply) ProtoMessage()    {}
func (*AddFundInitReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{26}
}

func (m *AddFundInitReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFundInitReply.Unmarshal(m, b)
}
func (m *AddFundInitReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFundInitReply.Marshal(b, m, deterministic)
}
func (m *AddFundInitReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFundInitReply.Merge(m, src)
}
func (m *AddFundInitReply) XXX_Size() int {
	return xxx_messageInfo_AddFundInitReply.Size(m)
}
func (m *AddFundInitReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFundInitReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddFundInitReply proto.InternalMessageInfo

func (m *AddFundInitReply) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddFundInitReply) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *AddFundInitReply) GetLockHeight() int64 {
	if m != nil {
		return m.LockHeight
	}
	return 0
}

func (m *AddFundInitReply) GetMaxAllowedDeposit() int64 {
	if m != nil {
		return m.MaxAllowedDeposit
	}
	return 0
}

func (m *AddFundInitReply) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *AddFundInitReply) GetRequiredReserve() int64 {
	if m != nil {
		return m.RequiredReserve
	}
	return 0
}

func (m *AddFundInitReply) GetMinAllowedDeposit() int64 {
	if m != nil {
		return m.MinAllowedDeposit
	}
	return 0
}

type AddFundStatusRequest struct {
	Addresses            []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	NotificationToken    string   `protobuf:"bytes,2,opt,name=notificationToken,proto3" json:"notificationToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFundStatusRequest) Reset()         { *m = AddFundStatusRequest{} }
func (m *AddFundStatusRequest) String() string { return proto.CompactTextString(m) }
func (*AddFundStatusRequest) ProtoMessage()    {}
func (*AddFundStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{27}
}

func (m *AddFundStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFundStatusRequest.Unmarshal(m, b)
}
func (m *AddFundStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFundStatusRequest.Marshal(b, m, deterministic)
}
func (m *AddFundStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFundStatusRequest.Merge(m, src)
}
func (m *AddFundStatusRequest) XXX_Size() int {
	return xxx_messageInfo_AddFundStatusRequest.Size(m)
}
func (m *AddFundStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFundStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddFundStatusRequest proto.InternalMessageInfo

func (m *AddFundStatusRequest) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *AddFundStatusRequest) GetNotificationToken() string {
	if m != nil {
		return m.NotificationToken
	}
	return ""
}

type AddFundStatusReply struct {
	Statuses             map[string]*AddFundStatusReply_AddressStatus `protobuf:"bytes,1,rep,name=statuses,proto3" json:"statuses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *AddFundStatusReply) Reset()         { *m = AddFundStatusReply{} }
func (m *AddFundStatusReply) String() string { return proto.CompactTextString(m) }
func (*AddFundStatusReply) ProtoMessage()    {}
func (*AddFundStatusReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{28}
}

func (m *AddFundStatusReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFundStatusReply.Unmarshal(m, b)
}
func (m *AddFundStatusReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFundStatusReply.Marshal(b, m, deterministic)
}
func (m *AddFundStatusReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFundStatusReply.Merge(m, src)
}
func (m *AddFundStatusReply) XXX_Size() int {
	return xxx_messageInfo_AddFundStatusReply.Size(m)
}
func (m *AddFundStatusReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFundStatusReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddFundStatusReply proto.InternalMessageInfo

func (m *AddFundStatusReply) GetStatuses() map[string]*AddFundStatusReply_AddressStatus {
	if m != nil {
		return m.Statuses
	}
	return nil
}

type AddFundStatusReply_AddressStatus struct {
	Tx                   string   `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Confirmed            bool     `protobuf:"varint,3,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	BlockHash            string   `protobuf:"bytes,4,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFundStatusReply_AddressStatus) Reset()         { *m = AddFundStatusReply_AddressStatus{} }
func (m *AddFundStatusReply_AddressStatus) String() string { return proto.CompactTextString(m) }
func (*AddFundStatusReply_AddressStatus) ProtoMessage()    {}
func (*AddFundStatusReply_AddressStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{28, 0}
}

func (m *AddFundStatusReply_AddressStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFundStatusReply_AddressStatus.Unmarshal(m, b)
}
func (m *AddFundStatusReply_AddressStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFundStatusReply_AddressStatus.Marshal(b, m, deterministic)
}
func (m *AddFundStatusReply_AddressStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFundStatusReply_AddressStatus.Merge(m, src)
}
func (m *AddFundStatusReply_AddressStatus) XXX_Size() int {
	return xxx_messageInfo_AddFundStatusReply_AddressStatus.Size(m)
}
func (m *AddFundStatusReply_AddressStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFundStatusReply_AddressStatus.DiscardUnknown(m)
}

var xxx_messageInfo_AddFundStatusReply_AddressStatus proto.InternalMessageInfo

func (m *AddFundStatusReply_AddressStatus) GetTx() string {
	if m != nil {
		return m.Tx
	}
	return ""
}

func (m *AddFundStatusReply_AddressStatus) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *AddFundStatusReply_AddressStatus) GetConfirmed() bool {
	if m != nil {
		return m.Confirmed
	}
	return false
}

func (m *AddFundStatusReply_AddressStatus) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

type RemoveFundRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveFundRequest) Reset()         { *m = RemoveFundRequest{} }
func (m *RemoveFundRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveFundRequest) ProtoMessage()    {}
func (*RemoveFundRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{29}
}

func (m *RemoveFundRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveFundRequest.Unmarshal(m, b)
}
func (m *RemoveFundRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveFundRequest.Marshal(b, m, deterministic)
}
func (m *RemoveFundRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveFundRequest.Merge(m, src)
}
func (m *RemoveFundRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveFundRequest.Size(m)
}
func (m *RemoveFundRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveFundRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveFundRequest proto.InternalMessageInfo

func (m *RemoveFundRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *RemoveFundRequest) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type RemoveFundReply struct {
	PaymentRequest       string   `protobuf:"bytes,1,opt,name=paymentRequest,proto3" json:"paymentRequest,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveFundReply) Reset()         { *m = RemoveFundReply{} }
func (m *RemoveFundReply) String() string { return proto.CompactTextString(m) }
func (*RemoveFundReply) ProtoMessage()    {}
func (*RemoveFundReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{30}
}

func (m *RemoveFundReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveFundReply.Unmarshal(m, b)
}
func (m *RemoveFundReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveFundReply.Marshal(b, m, deterministic)
}
func (m *RemoveFundReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveFundReply.Merge(m, src)
}
func (m *RemoveFundReply) XXX_Size() int {
	return xxx_messageInfo_RemoveFundReply.Size(m)
}
func (m *RemoveFundReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveFundReply.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveFundReply proto.InternalMessageInfo

func (m *RemoveFundReply) GetPaymentRequest() string {
	if m != nil {
		return m.PaymentRequest
	}
	return ""
}

func (m *RemoveFundReply) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type RedeemRemovedFundsRequest struct {
	Paymenthash          string   `protobuf:"bytes,1,opt,name=paymenthash,proto3" json:"paymenthash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedeemRemovedFundsRequest) Reset()         { *m = RedeemRemovedFundsRequest{} }
func (m *RedeemRemovedFundsRequest) String() string { return proto.CompactTextString(m) }
func (*RedeemRemovedFundsRequest) ProtoMessage()    {}
func (*RedeemRemovedFundsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{31}
}

func (m *RedeemRemovedFundsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedeemRemovedFundsRequest.Unmarshal(m, b)
}
func (m *RedeemRemovedFundsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedeemRemovedFundsRequest.Marshal(b, m, deterministic)
}
func (m *RedeemRemovedFundsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedeemRemovedFundsRequest.Merge(m, src)
}
func (m *RedeemRemovedFundsRequest) XXX_Size() int {
	return xxx_messageInfo_RedeemRemovedFundsRequest.Size(m)
}
func (m *RedeemRemovedFundsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RedeemRemovedFundsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RedeemRemovedFundsRequest proto.InternalMessageInfo

func (m *RedeemRemovedFundsRequest) GetPaymenthash() string {
	if m != nil {
		return m.Paymenthash
	}
	return ""
}

type RedeemRemovedFundsReply struct {
	Txid                 string   `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedeemRemovedFundsReply) Reset()         { *m = RedeemRemovedFundsReply{} }
func (m *RedeemRemovedFundsReply) String() string { return proto.CompactTextString(m) }
func (*RedeemRemovedFundsReply) ProtoMessage()    {}
func (*RedeemRemovedFundsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{32}
}

func (m *RedeemRemovedFundsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedeemRemovedFundsReply.Unmarshal(m, b)
}
func (m *RedeemRemovedFundsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedeemRemovedFundsReply.Marshal(b, m, deterministic)
}
func (m *RedeemRemovedFundsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedeemRemovedFundsReply.Merge(m, src)
}
func (m *RedeemRemovedFundsReply) XXX_Size() int {
	return xxx_messageInfo_RedeemRemovedFundsReply.Size(m)
}
func (m *RedeemRemovedFundsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RedeemRemovedFundsReply.DiscardUnknown(m)
}

var xxx_messageInfo_RedeemRemovedFundsReply proto.InternalMessageInfo

func (m *RedeemRemovedFundsReply) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

type GetSwapPaymentRequest struct {
	PaymentRequest       string   `protobuf:"bytes,1,opt,name=paymentRequest,proto3" json:"paymentRequest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSwapPaymentRequest) Reset()         { *m = GetSwapPaymentRequest{} }
func (m *GetSwapPaymentRequest) String() string { return proto.CompactTextString(m) }
func (*GetSwapPaymentRequest) ProtoMessage()    {}
func (*GetSwapPaymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{33}
}

func (m *GetSwapPaymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSwapPaymentRequest.Unmarshal(m, b)
}
func (m *GetSwapPaymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSwapPaymentRequest.Marshal(b, m, deterministic)
}
func (m *GetSwapPaymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSwapPaymentRequest.Merge(m, src)
}
func (m *GetSwapPaymentRequest) XXX_Size() int {
	return xxx_messageInfo_GetSwapPaymentRequest.Size(m)
}
func (m *GetSwapPaymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSwapPaymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSwapPaymentRequest proto.InternalMessageInfo

func (m *GetSwapPaymentRequest) GetPaymentRequest() string {
	if m != nil {
		return m.PaymentRequest
	}
	return ""
}

type GetSwapPaymentReply struct {
	PaymentError string `protobuf:"bytes,1,opt,name=paymentError,proto3" json:"paymentError,omitempty"`
	// deprecated
	FundsExceededLimit   bool                          `protobuf:"varint,2,opt,name=funds_exceeded_limit,json=fundsExceededLimit,proto3" json:"funds_exceeded_limit,omitempty"`
	SwapError            GetSwapPaymentReply_SwapError `protobuf:"varint,3,opt,name=swap_error,json=swapError,proto3,enum=breez.GetSwapPaymentReply_SwapError" json:"swap_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *GetSwapPaymentReply) Reset()         { *m = GetSwapPaymentReply{} }
func (m *GetSwapPaymentReply) String() string { return proto.CompactTextString(m) }
func (*GetSwapPaymentReply) ProtoMessage()    {}
func (*GetSwapPaymentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{34}
}

func (m *GetSwapPaymentReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSwapPaymentReply.Unmarshal(m, b)
}
func (m *GetSwapPaymentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSwapPaymentReply.Marshal(b, m, deterministic)
}
func (m *GetSwapPaymentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSwapPaymentReply.Merge(m, src)
}
func (m *GetSwapPaymentReply) XXX_Size() int {
	return xxx_messageInfo_GetSwapPaymentReply.Size(m)
}
func (m *GetSwapPaymentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSwapPaymentReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetSwapPaymentReply proto.InternalMessageInfo

func (m *GetSwapPaymentReply) GetPaymentError() string {
	if m != nil {
		return m.PaymentError
	}
	return ""
}

func (m *GetSwapPaymentReply) GetFundsExceededLimit() bool {
	if m != nil {
		return m.FundsExceededLimit
	}
	return false
}

func (m *GetSwapPaymentReply) GetSwapError() GetSwapPaymentReply_SwapError {
	if m != nil {
		return m.SwapError
	}
	return GetSwapPaymentReply_NO_ERROR
}

type RedeemSwapPaymentRequest struct {
	Preimage []byte `protobuf:"bytes,1,opt,name=preimage,proto3" json:"preimage,omitempty"`
	/// The target number of blocks that the funding transaction should be confirmed by.
	TargetConf int32 `protobuf:"varint,2,opt,name=target_conf,json=targetConf,proto3" json:"target_conf,omitempty"`
	/// A manual fee rate set in sat/byte that should be used when crafting the funding transaction.
	SatPerByte           int64    `protobuf:"varint,3,opt,name=sat_per_byte,json=satPerByte,proto3" json:"sat_per_byte,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedeemSwapPaymentRequest) Reset()         { *m = RedeemSwapPaymentRequest{} }
func (m *RedeemSwapPaymentRequest) String() string { return proto.CompactTextString(m) }
func (*RedeemSwapPaymentRequest) ProtoMessage()    {}
func (*RedeemSwapPaymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{35}
}

func (m *RedeemSwapPaymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedeemSwapPaymentRequest.Unmarshal(m, b)
}
func (m *RedeemSwapPaymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedeemSwapPaymentRequest.Marshal(b, m, deterministic)
}
func (m *RedeemSwapPaymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedeemSwapPaymentRequest.Merge(m, src)
}
func (m *RedeemSwapPaymentRequest) XXX_Size() int {
	return xxx_messageInfo_RedeemSwapPaymentRequest.Size(m)
}
func (m *RedeemSwapPaymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RedeemSwapPaymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RedeemSwapPaymentRequest proto.InternalMessageInfo

func (m *RedeemSwapPaymentRequest) GetPreimage() []byte {
	if m != nil {
		return m.Preimage
	}
	return nil
}

func (m *RedeemSwapPaymentRequest) GetTargetConf() int32 {
	if m != nil {
		return m.TargetConf
	}
	return 0
}

func (m *RedeemSwapPaymentRequest) GetSatPerByte() int64 {
	if m != nil {
		return m.SatPerByte
	}
	return 0
}

type RedeemSwapPaymentReply struct {
	Txid                 string   `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedeemSwapPaymentReply) Reset()         { *m = RedeemSwapPaymentReply{} }
func (m *RedeemSwapPaymentReply) String() string { return proto.CompactTextString(m) }
func (*RedeemSwapPaymentReply) ProtoMessage()    {}
func (*RedeemSwapPaymentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{36}
}

func (m *RedeemSwapPaymentReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedeemSwapPaymentReply.Unmarshal(m, b)
}
func (m *RedeemSwapPaymentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedeemSwapPaymentReply.Marshal(b, m, deterministic)
}
func (m *RedeemSwapPaymentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedeemSwapPaymentReply.Merge(m, src)
}
func (m *RedeemSwapPaymentReply) XXX_Size() int {
	return xxx_messageInfo_RedeemSwapPaymentReply.Size(m)
}
func (m *RedeemSwapPaymentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RedeemSwapPaymentReply.DiscardUnknown(m)
}

var xxx_messageInfo_RedeemSwapPaymentReply proto.InternalMessageInfo

func (m *RedeemSwapPaymentReply) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

// The request message containing the device id and lightning id
type RegisterRequest struct {
	DeviceID             string   `protobuf:"bytes,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	LightningID          string   `protobuf:"bytes,2,opt,name=lightningID,proto3" json:"lightningID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{37}
}

func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (m *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(m, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetDeviceID() string {
	if m != nil {
		return m.DeviceID
	}
	return ""
}

func (m *RegisterRequest) GetLightningID() string {
	if m != nil {
		return m.LightningID
	}
	return ""
}

// The response message containing the breez id
type RegisterReply struct {
	BreezID              string   `protobuf:"bytes,1,opt,name=breezID,proto3" json:"breezID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterReply) Reset()         { *m = RegisterReply{} }
func (m *RegisterReply) String() string { return proto.CompactTextString(m) }
func (*RegisterReply) ProtoMessage()    {}
func (*RegisterReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{38}
}

func (m *RegisterReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterReply.Unmarshal(m, b)
}
func (m *RegisterReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterReply.Marshal(b, m, deterministic)
}
func (m *RegisterReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterReply.Merge(m, src)
}
func (m *RegisterReply) XXX_Size() int {
	return xxx_messageInfo_RegisterReply.Size(m)
}
func (m *RegisterReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterReply.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterReply proto.InternalMessageInfo

func (m *RegisterReply) GetBreezID() string {
	if m != nil {
		return m.BreezID
	}
	return ""
}

type PaymentRequest struct {
	BreezID              string   `protobuf:"bytes,1,opt,name=breezID,proto3" json:"breezID,omitempty"`
	Invoice              string   `protobuf:"bytes,2,opt,name=invoice,proto3" json:"invoice,omitempty"`
	Payee                string   `protobuf:"bytes,3,opt,name=payee,proto3" json:"payee,omitempty"`
	Amount               int64    `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentRequest) Reset()         { *m = PaymentRequest{} }
func (m *PaymentRequest) String() string { return proto.CompactTextString(m) }
func (*PaymentRequest) ProtoMessage()    {}
func (*PaymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{39}
}

func (m *PaymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentRequest.Unmarshal(m, b)
}
func (m *PaymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentRequest.Marshal(b, m, deterministic)
}
func (m *PaymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentRequest.Merge(m, src)
}
func (m *PaymentRequest) XXX_Size() int {
	return xxx_messageInfo_PaymentRequest.Size(m)
}
func (m *PaymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentRequest proto.InternalMessageInfo

func (m *PaymentRequest) GetBreezID() string {
	if m != nil {
		return m.BreezID
	}
	return ""
}

func (m *PaymentRequest) GetInvoice() string {
	if m != nil {
		return m.Invoice
	}
	return ""
}

func (m *PaymentRequest) GetPayee() string {
	if m != nil {
		return m.Payee
	}
	return ""
}

func (m *PaymentRequest) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type InvoiceReply struct {
	Error                string   `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvoiceReply) Reset()         { *m = InvoiceReply{} }
func (m *InvoiceReply) String() string { return proto.CompactTextString(m) }
func (*InvoiceReply) ProtoMessage()    {}
func (*InvoiceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{40}
}

func (m *InvoiceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvoiceReply.Unmarshal(m, b)
}
func (m *InvoiceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvoiceReply.Marshal(b, m, deterministic)
}
func (m *InvoiceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvoiceReply.Merge(m, src)
}
func (m *InvoiceReply) XXX_Size() int {
	return xxx_messageInfo_InvoiceReply.Size(m)
}
func (m *InvoiceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_InvoiceReply.DiscardUnknown(m)
}

var xxx_messageInfo_InvoiceReply proto.InternalMessageInfo

func (m *InvoiceReply) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type UploadFileRequest struct {
	Content              []byte   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadFileRequest) Reset()         { *m = UploadFileRequest{} }
func (m *UploadFileRequest) String() string { return proto.CompactTextString(m) }
func (*UploadFileRequest) ProtoMessage()    {}
func (*UploadFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{41}
}

func (m *UploadFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadFileRequest.Unmarshal(m, b)
}
func (m *UploadFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadFileRequest.Marshal(b, m, deterministic)
}
func (m *UploadFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadFileRequest.Merge(m, src)
}
func (m *UploadFileRequest) XXX_Size() int {
	return xxx_messageInfo_UploadFileRequest.Size(m)
}
func (m *UploadFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadFileRequest proto.InternalMessageInfo

func (m *UploadFileRequest) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type UploadFileReply struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadFileReply) Reset()         { *m = UploadFileReply{} }
func (m *UploadFileReply) String() string { return proto.CompactTextString(m) }
func (*UploadFileReply) ProtoMessage()    {}
func (*UploadFileReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{42}
}

func (m *UploadFileReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadFileReply.Unmarshal(m, b)
}
func (m *UploadFileReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadFileReply.Marshal(b, m, deterministic)
}
func (m *UploadFileReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadFileReply.Merge(m, src)
}
func (m *UploadFileReply) XXX_Size() int {
	return xxx_messageInfo_UploadFileReply.Size(m)
}
func (m *UploadFileReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadFileReply.DiscardUnknown(m)
}

var xxx_messageInfo_UploadFileReply proto.InternalMessageInfo

func (m *UploadFileReply) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type PingRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{43}
}

func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (m *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(m, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

type PingReply struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingReply) Reset()         { *m = PingReply{} }
func (m *PingReply) String() string { return proto.CompactTextString(m) }
func (*PingReply) ProtoMessage()    {}
func (*PingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{44}
}

func (m *PingReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingReply.Unmarshal(m, b)
}
func (m *PingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingReply.Marshal(b, m, deterministic)
}
func (m *PingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingReply.Merge(m, src)
}
func (m *PingReply) XXX_Size() int {
	return xxx_messageInfo_PingReply.Size(m)
}
func (m *PingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PingReply.DiscardUnknown(m)
}

var xxx_messageInfo_PingReply proto.InternalMessageInfo

func (m *PingReply) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type OrderRequest struct {
	FullName             string   `protobuf:"bytes,1,opt,name=FullName,proto3" json:"FullName,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	City                 string   `protobuf:"bytes,3,opt,name=City,proto3" json:"City,omitempty"`
	State                string   `protobuf:"bytes,4,opt,name=State,proto3" json:"State,omitempty"`
	Zip                  string   `protobuf:"bytes,5,opt,name=Zip,proto3" json:"Zip,omitempty"`
	Country              string   `protobuf:"bytes,6,opt,name=Country,proto3" json:"Country,omitempty"`
	Email                string   `protobuf:"bytes,7,opt,name=Email,proto3" json:"Email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderRequest) Reset()         { *m = OrderRequest{} }
func (m *OrderRequest) String() string { return proto.CompactTextString(m) }
func (*OrderRequest) ProtoMessage()    {}
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{45}
}

func (m *OrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderRequest.Unmarshal(m, b)
}
func (m *OrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderRequest.Marshal(b, m, deterministic)
}
func (m *OrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderRequest.Merge(m, src)
}
func (m *OrderRequest) XXX_Size() int {
	return xxx_messageInfo_OrderRequest.Size(m)
}
func (m *OrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderRequest proto.InternalMessageInfo

func (m *OrderRequest) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *OrderRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *OrderRequest) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *OrderRequest) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *OrderRequest) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *OrderRequest) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *OrderRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type OrderReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderReply) Reset()         { *m = OrderReply{} }
func (m *OrderReply) String() string { return proto.CompactTextString(m) }
func (*OrderReply) ProtoMessage()    {}
func (*OrderReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{46}
}

func (m *OrderReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderReply.Unmarshal(m, b)
}
func (m *OrderReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderReply.Marshal(b, m, deterministic)
}
func (m *OrderReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderReply.Merge(m, src)
}
func (m *OrderReply) XXX_Size() int {
	return xxx_messageInfo_OrderReply.Size(m)
}
func (m *OrderReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderReply.DiscardUnknown(m)
}

var xxx_messageInfo_OrderReply proto.InternalMessageInfo

type SetNodeInfoRequest struct {
	Pubkey               []byte   `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp            int64    `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Signature            []byte   `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetNodeInfoRequest) Reset()         { *m = SetNodeInfoRequest{} }
func (m *SetNodeInfoRequest) String() string { return proto.CompactTextString(m) }
func (*SetNodeInfoRequest) ProtoMessage()    {}
func (*SetNodeInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{47}
}

func (m *SetNodeInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetNodeInfoRequest.Unmarshal(m, b)
}
func (m *SetNodeInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetNodeInfoRequest.Marshal(b, m, deterministic)
}
func (m *SetNodeInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetNodeInfoRequest.Merge(m, src)
}
func (m *SetNodeInfoRequest) XXX_Size() int {
	return xxx_messageInfo_SetNodeInfoRequest.Size(m)
}
func (m *SetNodeInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetNodeInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetNodeInfoRequest proto.InternalMessageInfo

func (m *SetNodeInfoRequest) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *SetNodeInfoRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SetNodeInfoRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *SetNodeInfoRequest) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *SetNodeInfoRequest) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type SetNodeInfoResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetNodeInfoResponse) Reset()         { *m = SetNodeInfoResponse{} }
func (m *SetNodeInfoResponse) String() string { return proto.CompactTextString(m) }
func (*SetNodeInfoResponse) ProtoMessage()    {}
func (*SetNodeInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{48}
}

func (m *SetNodeInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetNodeInfoResponse.Unmarshal(m, b)
}
func (m *SetNodeInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetNodeInfoResponse.Marshal(b, m, deterministic)
}
func (m *SetNodeInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetNodeInfoResponse.Merge(m, src)
}
func (m *SetNodeInfoResponse) XXX_Size() int {
	return xxx_messageInfo_SetNodeInfoResponse.Size(m)
}
func (m *SetNodeInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetNodeInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetNodeInfoResponse proto.InternalMessageInfo

type GetNodeInfoRequest struct {
	Pubkey               []byte   `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeInfoRequest) Reset()         { *m = GetNodeInfoRequest{} }
func (m *GetNodeInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeInfoRequest) ProtoMessage()    {}
func (*GetNodeInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{49}
}

func (m *GetNodeInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeInfoRequest.Unmarshal(m, b)
}
func (m *GetNodeInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetNodeInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeInfoRequest.Merge(m, src)
}
func (m *GetNodeInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeInfoRequest.Size(m)
}
func (m *GetNodeInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeInfoRequest proto.InternalMessageInfo

func (m *GetNodeInfoRequest) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *GetNodeInfoRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type GetNodeInfoResponse struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp            int64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Signature            []byte   `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeInfoResponse) Reset()         { *m = GetNodeInfoResponse{} }
func (m *GetNodeInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeInfoResponse) ProtoMessage()    {}
func (*GetNodeInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{50}
}

func (m *GetNodeInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeInfoResponse.Unmarshal(m, b)
}
func (m *GetNodeInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetNodeInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeInfoResponse.Merge(m, src)
}
func (m *GetNodeInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeInfoResponse.Size(m)
}
func (m *GetNodeInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeInfoResponse proto.InternalMessageInfo

func (m *GetNodeInfoResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *GetNodeInfoResponse) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *GetNodeInfoResponse) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type JoinCTPSessionRequest struct {
	PartyType            JoinCTPSessionRequest_PartyType `protobuf:"varint,1,opt,name=partyType,proto3,enum=breez.JoinCTPSessionRequest_PartyType" json:"partyType,omitempty"`
	PartyName            string                          `protobuf:"bytes,2,opt,name=partyName,proto3" json:"partyName,omitempty"`
	NotificationToken    string                          `protobuf:"bytes,3,opt,name=notificationToken,proto3" json:"notificationToken,omitempty"`
	SessionID            string                          `protobuf:"bytes,4,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *JoinCTPSessionRequest) Reset()         { *m = JoinCTPSessionRequest{} }
func (m *JoinCTPSessionRequest) String() string { return proto.CompactTextString(m) }
func (*JoinCTPSessionRequest) ProtoMessage()    {}
func (*JoinCTPSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{51}
}

func (m *JoinCTPSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinCTPSessionRequest.Unmarshal(m, b)
}
func (m *JoinCTPSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinCTPSessionRequest.Marshal(b, m, deterministic)
}
func (m *JoinCTPSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinCTPSessionRequest.Merge(m, src)
}
func (m *JoinCTPSessionRequest) XXX_Size() int {
	return xxx_messageInfo_JoinCTPSessionRequest.Size(m)
}
func (m *JoinCTPSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinCTPSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinCTPSessionRequest proto.InternalMessageInfo

func (m *JoinCTPSessionRequest) GetPartyType() JoinCTPSessionRequest_PartyType {
	if m != nil {
		return m.PartyType
	}
	return JoinCTPSessionRequest_PAYER
}

func (m *JoinCTPSessionRequest) GetPartyName() string {
	if m != nil {
		return m.PartyName
	}
	return ""
}

func (m *JoinCTPSessionRequest) GetNotificationToken() string {
	if m != nil {
		return m.NotificationToken
	}
	return ""
}

func (m *JoinCTPSessionRequest) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

type JoinCTPSessionResponse struct {
	SessionID            string   `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Expiry               int64    `protobuf:"varint,2,opt,name=expiry,proto3" json:"expiry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinCTPSessionResponse) Reset()         { *m = JoinCTPSessionResponse{} }
func (m *JoinCTPSessionResponse) String() string { return proto.CompactTextString(m) }
func (*JoinCTPSessionResponse) ProtoMessage()    {}
func (*JoinCTPSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{52}
}

func (m *JoinCTPSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinCTPSessionResponse.Unmarshal(m, b)
}
func (m *JoinCTPSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinCTPSessionResponse.Marshal(b, m, deterministic)
}
func (m *JoinCTPSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinCTPSessionResponse.Merge(m, src)
}
func (m *JoinCTPSessionResponse) XXX_Size() int {
	return xxx_messageInfo_JoinCTPSessionResponse.Size(m)
}
func (m *JoinCTPSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinCTPSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JoinCTPSessionResponse proto.InternalMessageInfo

func (m *JoinCTPSessionResponse) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *JoinCTPSessionResponse) GetExpiry() int64 {
	if m != nil {
		return m.Expiry
	}
	return 0
}

type TerminateCTPSessionRequest struct {
	SessionID            string   `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TerminateCTPSessionRequest) Reset()         { *m = TerminateCTPSessionRequest{} }
func (m *TerminateCTPSessionRequest) String() string { return proto.CompactTextString(m) }
func (*TerminateCTPSessionRequest) ProtoMessage()    {}
func (*TerminateCTPSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{53}
}

func (m *TerminateCTPSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TerminateCTPSessionRequest.Unmarshal(m, b)
}
func (m *TerminateCTPSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TerminateCTPSessionRequest.Marshal(b, m, deterministic)
}
func (m *TerminateCTPSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TerminateCTPSessionRequest.Merge(m, src)
}
func (m *TerminateCTPSessionRequest) XXX_Size() int {
	return xxx_messageInfo_TerminateCTPSessionRequest.Size(m)
}
func (m *TerminateCTPSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TerminateCTPSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TerminateCTPSessionRequest proto.InternalMessageInfo

func (m *TerminateCTPSessionRequest) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

type TerminateCTPSessionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TerminateCTPSessionResponse) Reset()         { *m = TerminateCTPSessionResponse{} }
func (m *TerminateCTPSessionResponse) String() string { return proto.CompactTextString(m) }
func (*TerminateCTPSessionResponse) ProtoMessage()    {}
func (*TerminateCTPSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{54}
}

func (m *TerminateCTPSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TerminateCTPSessionResponse.Unmarshal(m, b)
}
func (m *TerminateCTPSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TerminateCTPSessionResponse.Marshal(b, m, deterministic)
}
func (m *TerminateCTPSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TerminateCTPSessionResponse.Merge(m, src)
}
func (m *TerminateCTPSessionResponse) XXX_Size() int {
	return xxx_messageInfo_TerminateCTPSessionResponse.Size(m)
}
func (m *TerminateCTPSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TerminateCTPSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TerminateCTPSessionResponse proto.InternalMessageInfo

type RegisterTransactionConfirmationRequest struct {
	TxID                 string                                                  `protobuf:"bytes,1,opt,name=txID,proto3" json:"txID,omitempty"`
	NotificationToken    string                                                  `protobuf:"bytes,2,opt,name=notificationToken,proto3" json:"notificationToken,omitempty"`
	NotificationType     RegisterTransactionConfirmationRequest_NotificationType `protobuf:"varint,3,opt,name=notificationType,proto3,enum=breez.RegisterTransactionConfirmationRequest_NotificationType" json:"notificationType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                `json:"-"`
	XXX_unrecognized     []byte                                                  `json:"-"`
	XXX_sizecache        int32                                                   `json:"-"`
}

func (m *RegisterTransactionConfirmationRequest) Reset() {
	*m = RegisterTransactionConfirmationRequest{}
}
func (m *RegisterTransactionConfirmationRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterTransactionConfirmationRequest) ProtoMessage()    {}
func (*RegisterTransactionConfirmationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{55}
}

func (m *RegisterTransactionConfirmationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterTransactionConfirmationRequest.Unmarshal(m, b)
}
func (m *RegisterTransactionConfirmationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterTransactionConfirmationRequest.Marshal(b, m, deterministic)
}
func (m *RegisterTransactionConfirmationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterTransactionConfirmationRequest.Merge(m, src)
}
func (m *RegisterTransactionConfirmationRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterTransactionConfirmationRequest.Size(m)
}
func (m *RegisterTransactionConfirmationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterTransactionConfirmationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterTransactionConfirmationRequest proto.InternalMessageInfo

func (m *RegisterTransactionConfirmationRequest) GetTxID() string {
	if m != nil {
		return m.TxID
	}
	return ""
}

func (m *RegisterTransactionConfirmationRequest) GetNotificationToken() string {
	if m != nil {
		return m.NotificationToken
	}
	return ""
}

func (m *RegisterTransactionConfirmationRequest) GetNotificationType() RegisterTransactionConfirmationRequest_NotificationType {
	if m != nil {
		return m.NotificationType
	}
	return RegisterTransactionConfirmationRequest_READY_RECEIVE_PAYMENT
}

type RegisterTransactionConfirmationResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterTransactionConfirmationResponse) Reset() {
	*m = RegisterTransactionConfirmationResponse{}
}
func (m *RegisterTransactionConfirmationResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterTransactionConfirmationResponse) ProtoMessage()    {}
func (*RegisterTransactionConfirmationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{56}
}

func (m *RegisterTransactionConfirmationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterTransactionConfirmationResponse.Unmarshal(m, b)
}
func (m *RegisterTransactionConfirmationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterTransactionConfirmationResponse.Marshal(b, m, deterministic)
}
func (m *RegisterTransactionConfirmationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterTransactionConfirmationResponse.Merge(m, src)
}
func (m *RegisterTransactionConfirmationResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterTransactionConfirmationResponse.Size(m)
}
func (m *RegisterTransactionConfirmationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterTransactionConfirmationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterTransactionConfirmationResponse proto.InternalMessageInfo

type RegisterPeriodicSyncRequest struct {
	NotificationToken    string   `protobuf:"bytes,1,opt,name=notificationToken,proto3" json:"notificationToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterPeriodicSyncRequest) Reset()         { *m = RegisterPeriodicSyncRequest{} }
func (m *RegisterPeriodicSyncRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterPeriodicSyncRequest) ProtoMessage()    {}
func (*RegisterPeriodicSyncRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{57}
}

func (m *RegisterPeriodicSyncRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterPeriodicSyncRequest.Unmarshal(m, b)
}
func (m *RegisterPeriodicSyncRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterPeriodicSyncRequest.Marshal(b, m, deterministic)
}
func (m *RegisterPeriodicSyncRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterPeriodicSyncRequest.Merge(m, src)
}
func (m *RegisterPeriodicSyncRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterPeriodicSyncRequest.Size(m)
}
func (m *RegisterPeriodicSyncRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterPeriodicSyncRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterPeriodicSyncRequest proto.InternalMessageInfo

func (m *RegisterPeriodicSyncRequest) GetNotificationToken() string {
	if m != nil {
		return m.NotificationToken
	}
	return ""
}

type RegisterPeriodicSyncResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterPeriodicSyncResponse) Reset()         { *m = RegisterPeriodicSyncResponse{} }
func (m *RegisterPeriodicSyncResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterPeriodicSyncResponse) ProtoMessage()    {}
func (*RegisterPeriodicSyncResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{58}
}

func (m *RegisterPeriodicSyncResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterPeriodicSyncResponse.Unmarshal(m, b)
}
func (m *RegisterPeriodicSyncResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterPeriodicSyncResponse.Marshal(b, m, deterministic)
}
func (m *RegisterPeriodicSyncResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterPeriodicSyncResponse.Merge(m, src)
}
func (m *RegisterPeriodicSyncResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterPeriodicSyncResponse.Size(m)
}
func (m *RegisterPeriodicSyncResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterPeriodicSyncResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterPeriodicSyncResponse proto.InternalMessageInfo

type BoltzReverseSwapLockupTx struct {
	BoltzId              string   `protobuf:"bytes,1,opt,name=boltz_id,json=boltzId,proto3" json:"boltz_id,omitempty"`
	TimeoutBlockHeight   uint32   `protobuf:"varint,2,opt,name=timeout_block_height,json=timeoutBlockHeight,proto3" json:"timeout_block_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BoltzReverseSwapLockupTx) Reset()         { *m = BoltzReverseSwapLockupTx{} }
func (m *BoltzReverseSwapLockupTx) String() string { return proto.CompactTextString(m) }
func (*BoltzReverseSwapLockupTx) ProtoMessage()    {}
func (*BoltzReverseSwapLockupTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{59}
}

func (m *BoltzReverseSwapLockupTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BoltzReverseSwapLockupTx.Unmarshal(m, b)
}
func (m *BoltzReverseSwapLockupTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BoltzReverseSwapLockupTx.Marshal(b, m, deterministic)
}
func (m *BoltzReverseSwapLockupTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BoltzReverseSwapLockupTx.Merge(m, src)
}
func (m *BoltzReverseSwapLockupTx) XXX_Size() int {
	return xxx_messageInfo_BoltzReverseSwapLockupTx.Size(m)
}
func (m *BoltzReverseSwapLockupTx) XXX_DiscardUnknown() {
	xxx_messageInfo_BoltzReverseSwapLockupTx.DiscardUnknown(m)
}

var xxx_messageInfo_BoltzReverseSwapLockupTx proto.InternalMessageInfo

func (m *BoltzReverseSwapLockupTx) GetBoltzId() string {
	if m != nil {
		return m.BoltzId
	}
	return ""
}

func (m *BoltzReverseSwapLockupTx) GetTimeoutBlockHeight() uint32 {
	if m != nil {
		return m.TimeoutBlockHeight
	}
	return 0
}

type PushTxNotificationRequest struct {
	DeviceId        string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Title           string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Body            string `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	TxHash          []byte `protobuf:"bytes,4,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	Script          []byte `protobuf:"bytes,5,opt,name=script,proto3" json:"script,omitempty"`
	BlockHeightHint uint32 `protobuf:"varint,6,opt,name=block_height_hint,json=blockHeightHint,proto3" json:"block_height_hint,omitempty"`
	// Types that are valid to be assigned to Info:
	//	*PushTxNotificationRequest_BoltzReverseSwapLockupTxInfo
	Info                 isPushTxNotificationRequest_Info `protobuf_oneof:"info"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *PushTxNotificationRequest) Reset()         { *m = PushTxNotificationRequest{} }
func (m *PushTxNotificationRequest) String() string { return proto.CompactTextString(m) }
func (*PushTxNotificationRequest) ProtoMessage()    {}
func (*PushTxNotificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{60}
}

func (m *PushTxNotificationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushTxNotificationRequest.Unmarshal(m, b)
}
func (m *PushTxNotificationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushTxNotificationRequest.Marshal(b, m, deterministic)
}
func (m *PushTxNotificationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushTxNotificationRequest.Merge(m, src)
}
func (m *PushTxNotificationRequest) XXX_Size() int {
	return xxx_messageInfo_PushTxNotificationRequest.Size(m)
}
func (m *PushTxNotificationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushTxNotificationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushTxNotificationRequest proto.InternalMessageInfo

func (m *PushTxNotificationRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *PushTxNotificationRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *PushTxNotificationRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *PushTxNotificationRequest) GetTxHash() []byte {
	if m != nil {
		return m.TxHash
	}
	return nil
}

func (m *PushTxNotificationRequest) GetScript() []byte {
	if m != nil {
		return m.Script
	}
	return nil
}

func (m *PushTxNotificationRequest) GetBlockHeightHint() uint32 {
	if m != nil {
		return m.BlockHeightHint
	}
	return 0
}

type isPushTxNotificationRequest_Info interface {
	isPushTxNotificationRequest_Info()
}

type PushTxNotificationRequest_BoltzReverseSwapLockupTxInfo struct {
	BoltzReverseSwapLockupTxInfo *BoltzReverseSwapLockupTx `protobuf:"bytes,7,opt,name=boltz_reverse_swap_lockup_tx_info,json=boltzReverseSwapLockupTxInfo,proto3,oneof"`
}

func (*PushTxNotificationRequest_BoltzReverseSwapLockupTxInfo) isPushTxNotificationRequest_Info() {}

func (m *PushTxNotificationRequest) GetInfo() isPushTxNotificationRequest_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *PushTxNotificationRequest) GetBoltzReverseSwapLockupTxInfo() *BoltzReverseSwapLockupTx {
	if x, ok := m.GetInfo().(*PushTxNotificationRequest_BoltzReverseSwapLockupTxInfo); ok {
		return x.BoltzReverseSwapLockupTxInfo
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PushTxNotificationRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PushTxNotificationRequest_BoltzReverseSwapLockupTxInfo)(nil),
	}
}

type PushTxNotificationResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushTxNotificationResponse) Reset()         { *m = PushTxNotificationResponse{} }
func (m *PushTxNotificationResponse) String() string { return proto.CompactTextString(m) }
func (*PushTxNotificationResponse) ProtoMessage()    {}
func (*PushTxNotificationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{61}
}

func (m *PushTxNotificationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushTxNotificationResponse.Unmarshal(m, b)
}
func (m *PushTxNotificationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushTxNotificationResponse.Marshal(b, m, deterministic)
}
func (m *PushTxNotificationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushTxNotificationResponse.Merge(m, src)
}
func (m *PushTxNotificationResponse) XXX_Size() int {
	return xxx_messageInfo_PushTxNotificationResponse.Size(m)
}
func (m *PushTxNotificationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PushTxNotificationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PushTxNotificationResponse proto.InternalMessageInfo

type BreezAppVersionsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BreezAppVersionsRequest) Reset()         { *m = BreezAppVersionsRequest{} }
func (m *BreezAppVersionsRequest) String() string { return proto.CompactTextString(m) }
func (*BreezAppVersionsRequest) ProtoMessage()    {}
func (*BreezAppVersionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{62}
}

func (m *BreezAppVersionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BreezAppVersionsRequest.Unmarshal(m, b)
}
func (m *BreezAppVersionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BreezAppVersionsRequest.Marshal(b, m, deterministic)
}
func (m *BreezAppVersionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BreezAppVersionsRequest.Merge(m, src)
}
func (m *BreezAppVersionsRequest) XXX_Size() int {
	return xxx_messageInfo_BreezAppVersionsRequest.Size(m)
}
func (m *BreezAppVersionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BreezAppVersionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BreezAppVersionsRequest proto.InternalMessageInfo

type BreezAppVersionsReply struct {
	Version              []string `protobuf:"bytes,1,rep,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BreezAppVersionsReply) Reset()         { *m = BreezAppVersionsReply{} }
func (m *BreezAppVersionsReply) String() string { return proto.CompactTextString(m) }
func (*BreezAppVersionsReply) ProtoMessage()    {}
func (*BreezAppVersionsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{63}
}

func (m *BreezAppVersionsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BreezAppVersionsReply.Unmarshal(m, b)
}
func (m *BreezAppVersionsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BreezAppVersionsReply.Marshal(b, m, deterministic)
}
func (m *BreezAppVersionsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BreezAppVersionsReply.Merge(m, src)
}
func (m *BreezAppVersionsReply) XXX_Size() int {
	return xxx_messageInfo_BreezAppVersionsReply.Size(m)
}
func (m *BreezAppVersionsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BreezAppVersionsReply.DiscardUnknown(m)
}

var xxx_messageInfo_BreezAppVersionsReply proto.InternalMessageInfo

func (m *BreezAppVersionsReply) GetVersion() []string {
	if m != nil {
		return m.Version
	}
	return nil
}

type GetReverseRoutingNodeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReverseRoutingNodeRequest) Reset()         { *m = GetReverseRoutingNodeRequest{} }
func (m *GetReverseRoutingNodeRequest) String() string { return proto.CompactTextString(m) }
func (*GetReverseRoutingNodeRequest) ProtoMessage()    {}
func (*GetReverseRoutingNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{64}
}

func (m *GetReverseRoutingNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReverseRoutingNodeRequest.Unmarshal(m, b)
}
func (m *GetReverseRoutingNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReverseRoutingNodeRequest.Marshal(b, m, deterministic)
}
func (m *GetReverseRoutingNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReverseRoutingNodeRequest.Merge(m, src)
}
func (m *GetReverseRoutingNodeRequest) XXX_Size() int {
	return xxx_messageInfo_GetReverseRoutingNodeRequest.Size(m)
}
func (m *GetReverseRoutingNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReverseRoutingNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetReverseRoutingNodeRequest proto.InternalMessageInfo

type GetReverseRoutingNodeReply struct {
	NodeId               []byte   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReverseRoutingNodeReply) Reset()         { *m = GetReverseRoutingNodeReply{} }
func (m *GetReverseRoutingNodeReply) String() string { return proto.CompactTextString(m) }
func (*GetReverseRoutingNodeReply) ProtoMessage()    {}
func (*GetReverseRoutingNodeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b855428eb05b58db, []int{65}
}

func (m *GetReverseRoutingNodeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReverseRoutingNodeReply.Unmarshal(m, b)
}
func (m *GetReverseRoutingNodeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReverseRoutingNodeReply.Marshal(b, m, deterministic)
}
func (m *GetReverseRoutingNodeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReverseRoutingNodeReply.Merge(m, src)
}
func (m *GetReverseRoutingNodeReply) XXX_Size() int {
	return xxx_messageInfo_GetReverseRoutingNodeReply.Size(m)
}
func (m *GetReverseRoutingNodeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReverseRoutingNodeReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetReverseRoutingNodeReply proto.InternalMessageInfo

func (m *GetReverseRoutingNodeReply) GetNodeId() []byte {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func init() {
	proto.RegisterEnum("breez.GetSwapPaymentReply_SwapError", GetSwapPaymentReply_SwapError_name, GetSwapPaymentReply_SwapError_value)
	proto.RegisterEnum("breez.JoinCTPSessionRequest_PartyType", JoinCTPSessionRequest_PartyType_name, JoinCTPSessionRequest_PartyType_value)
	proto.RegisterEnum("breez.RegisterTransactionConfirmationRequest_NotificationType", RegisterTransactionConfirmationRequest_NotificationType_name, RegisterTransactionConfirmationRequest_NotificationType_value)
	proto.RegisterType((*SignUrlRequest)(nil), "breez.SignUrlRequest")
	proto.RegisterType((*SignUrlResponse)(nil), "breez.SignUrlResponse")
	proto.RegisterType((*InactiveNotifyRequest)(nil), "breez.InactiveNotifyRequest")
	proto.RegisterType((*InactiveNotifyResponse)(nil), "breez.InactiveNotifyResponse")
	proto.RegisterType((*ReceiverInfoRequest)(nil), "breez.ReceiverInfoRequest")
	proto.RegisterType((*ReceiverInfoReply)(nil), "breez.ReceiverInfoReply")
	proto.RegisterType((*RatesRequest)(nil), "breez.RatesRequest")
	proto.RegisterType((*Rate)(nil), "breez.Rate")
	proto.RegisterType((*RatesReply)(nil), "breez.RatesReply")
	proto.RegisterType((*LSPListRequest)(nil), "breez.LSPListRequest")
	proto.RegisterType((*LSPInformation)(nil), "breez.LSPInformation")
	proto.RegisterType((*LSPListReply)(nil), "breez.LSPListReply")
	proto.RegisterMapType((map[string]*LSPInformation)(nil), "breez.LSPListReply.LspsEntry")
	proto.RegisterType((*RegisterPaymentRequest)(nil), "breez.RegisterPaymentRequest")
	proto.RegisterType((*RegisterPaymentReply)(nil), "breez.RegisterPaymentReply")
	proto.RegisterType((*CheckChannelsRequest)(nil), "breez.CheckChannelsRequest")
	proto.RegisterType((*CheckChannelsReply)(nil), "breez.CheckChannelsReply")
	proto.RegisterType((*OpenLSPChannelRequest)(nil), "breez.OpenLSPChannelRequest")
	proto.RegisterType((*OpenLSPChannelReply)(nil), "breez.OpenLSPChannelReply")
	proto.RegisterType((*OpenChannelRequest)(nil), "breez.OpenChannelRequest")
	proto.RegisterType((*OpenChannelReply)(nil), "breez.OpenChannelReply")
	proto.RegisterType((*OpenPublicChannelRequest)(nil), "breez.OpenPublicChannelRequest")
	proto.RegisterType((*OpenPublicChannelReply)(nil), "breez.OpenPublicChannelReply")
	proto.RegisterType((*Captcha)(nil), "breez.Captcha")
	proto.RegisterType((*UpdateChannelPolicyRequest)(nil), "breez.UpdateChannelPolicyRequest")
	proto.RegisterType((*UpdateChannelPolicyReply)(nil), "breez.UpdateChannelPolicyReply")
	proto.RegisterType((*AddFundInitRequest)(nil), "breez.AddFundInitRequest")
	proto.RegisterType((*AddFundInitReply)(nil), "breez.AddFundInitReply")
	proto.RegisterType((*AddFundStatusRequest)(nil), "breez.AddFundStatusRequest")
	proto.RegisterType((*AddFundStatusReply)(nil), "breez.AddFundStatusReply")
	proto.RegisterMapType((map[string]*AddFundStatusReply_AddressStatus)(nil), "breez.AddFundStatusReply.StatusesEntry")
	proto.RegisterType((*AddFundStatusReply_AddressStatus)(nil), "breez.AddFundStatusReply.AddressStatus")
	proto.RegisterType((*RemoveFundRequest)(nil), "breez.RemoveFundRequest")
	proto.RegisterType((*RemoveFundReply)(nil), "breez.RemoveFundReply")
	proto.RegisterType((*RedeemRemovedFundsRequest)(nil), "breez.RedeemRemovedFundsRequest")
	proto.RegisterType((*RedeemRemovedFundsReply)(nil), "breez.RedeemRemovedFundsReply")
	proto.RegisterType((*GetSwapPaymentRequest)(nil), "breez.GetSwapPaymentRequest")
	proto.RegisterType((*GetSwapPaymentReply)(nil), "breez.GetSwapPaymentReply")
	proto.RegisterType((*RedeemSwapPaymentRequest)(nil), "breez.RedeemSwapPaymentRequest")
	proto.RegisterType((*RedeemSwapPaymentReply)(nil), "breez.RedeemSwapPaymentReply")
	proto.RegisterType((*RegisterRequest)(nil), "breez.RegisterRequest")
	proto.RegisterType((*RegisterReply)(nil), "breez.RegisterReply")
	proto.RegisterType((*PaymentRequest)(nil), "breez.PaymentRequest")
	proto.RegisterType((*InvoiceReply)(nil), "breez.InvoiceReply")
	proto.RegisterType((*UploadFileRequest)(nil), "breez.UploadFileRequest")
	proto.RegisterType((*UploadFileReply)(nil), "breez.UploadFileReply")
	proto.RegisterType((*PingRequest)(nil), "breez.PingRequest")
	proto.RegisterType((*PingReply)(nil), "breez.PingReply")
	proto.RegisterType((*OrderRequest)(nil), "breez.OrderRequest")
	proto.RegisterType((*OrderReply)(nil), "breez.OrderReply")
	proto.RegisterType((*SetNodeInfoRequest)(nil), "breez.SetNodeInfoRequest")
	proto.RegisterType((*SetNodeInfoResponse)(nil), "breez.SetNodeInfoResponse")
	proto.RegisterType((*GetNodeInfoRequest)(nil), "breez.GetNodeInfoRequest")
	proto.RegisterType((*GetNodeInfoResponse)(nil), "breez.GetNodeInfoResponse")
	proto.RegisterType((*JoinCTPSessionRequest)(nil), "breez.JoinCTPSessionRequest")
	proto.RegisterType((*JoinCTPSessionResponse)(nil), "breez.JoinCTPSessionResponse")
	proto.RegisterType((*TerminateCTPSessionRequest)(nil), "breez.TerminateCTPSessionRequest")
	proto.RegisterType((*TerminateCTPSessionResponse)(nil), "breez.TerminateCTPSessionResponse")
	proto.RegisterType((*RegisterTransactionConfirmationRequest)(nil), "breez.RegisterTransactionConfirmationRequest")
	proto.RegisterType((*RegisterTransactionConfirmationResponse)(nil), "breez.RegisterTransactionConfirmationResponse")
	proto.RegisterType((*RegisterPeriodicSyncRequest)(nil), "breez.RegisterPeriodicSyncRequest")
	proto.RegisterType((*RegisterPeriodicSyncResponse)(nil), "breez.RegisterPeriodicSyncResponse")
	proto.RegisterType((*BoltzReverseSwapLockupTx)(nil), "breez.BoltzReverseSwapLockupTx")
	proto.RegisterType((*PushTxNotificationRequest)(nil), "breez.PushTxNotificationRequest")
	proto.RegisterType((*PushTxNotificationResponse)(nil), "breez.PushTxNotificationResponse")
	proto.RegisterType((*BreezAppVersionsRequest)(nil), "breez.BreezAppVersionsRequest")
	proto.RegisterType((*BreezAppVersionsReply)(nil), "breez.BreezAppVersionsReply")
	proto.RegisterType((*GetReverseRoutingNodeRequest)(nil), "breez.GetReverseRoutingNodeRequest")
	proto.RegisterType((*GetReverseRoutingNodeReply)(nil), "breez.GetReverseRoutingNodeReply")
}

func init() {
	proto.RegisterFile("breez.proto", fileDescriptor_b855428eb05b58db)
}

var fileDescriptor_b855428eb05b58db = []byte{
	// 2953 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x3a, 0x5b, 0x6f, 0xe3, 0xd6,
	0xd1, 0x96, 0xe4, 0x9b, 0x46, 0xb2, 0x56, 0x3e, 0xb6, 0xbc, 0x32, 0xf7, 0xe6, 0x65, 0x6e, 0xce,
	0xcd, 0xc9, 0xea, 0xfb, 0x3e, 0xe4, 0x43, 0x8a, 0xa4, 0x91, 0x65, 0x79, 0x57, 0x8d, 0x2d, 0x0b,
	0x94, 0x9c, 0x6e, 0x52, 0xb4, 0x04, 0x2d, 0x1e, 0xcb, 0xcc, 0x52, 0x24, 0x97, 0xa4, 0xbc, 0x52,
	0x1e, 0xfb, 0x50, 0x20, 0x40, 0x51, 0xa4, 0x8f, 0xed, 0x5b, 0x81, 0x3e, 0x17, 0x45, 0x5b, 0xf4,
	0x47, 0xf5, 0x57, 0x14, 0x73, 0xce, 0xe1, 0x55, 0x94, 0x77, 0x17, 0xcd, 0x43, 0xdf, 0xce, 0xcc,
	0x19, 0xce, 0xcc, 0x99, 0x33, 0x67, 0x6e, 0x12, 0x94, 0x2e, 0x5c, 0x4a, 0xbf, 0x3b, 0x70, 0x5c,
	0xdb, 0xb7, 0xc9, 0x0a, 0x03, 0xe4, 0x2e, 0x54, 0xfa, 0xc6, 0xc8, 0x3a, 0x77, 0x4d, 0x85, 0x3e,
	0x9f, 0x50, 0xcf, 0x27, 0xbb, 0xb0, 0x76, 0xa1, 0x79, 0xf4, 0xdc, 0x35, 0xeb, 0xb9, 0xbd, 0xdc,
	0x7e, 0x51, 0x59, 0x47, 0x50, 0x9d, 0xb8, 0x26, 0x79, 0x08, 0xa5, 0xe7, 0x13, 0xea, 0xce, 0xfa,
	0xbe, 0x6b, 0x58, 0xa3, 0x7a, 0x9e, 0x6d, 0x97, 0x19, 0x4a, 0xf5, 0x18, 0x4e, 0xfe, 0x00, 0x6e,
	0x85, 0xfc, 0x3c, 0xc7, 0xb6, 0x3c, 0x8a, 0x0c, 0x2f, 0x27, 0xa6, 0x19, 0x63, 0x88, 0x20, 0x32,
	0x94, 0x5b, 0x50, 0xeb, 0x58, 0xda, 0xd0, 0x37, 0xae, 0x69, 0xd7, 0xf6, 0x8d, 0xcb, 0x59, 0xa0,
	0xc4, 0x0e, 0xac, 0x3a, 0x93, 0x8b, 0x67, 0x74, 0xc6, 0x3e, 0x29, 0x2b, 0x02, 0x22, 0x04, 0x96,
	0x75, 0x6d, 0xe6, 0x31, 0xd1, 0x2b, 0x0a, 0x5b, 0xcb, 0x75, 0xd8, 0x49, 0x33, 0xe1, 0x92, 0xe5,
	0x1a, 0x6c, 0x29, 0x74, 0x48, 0x8d, 0x6b, 0xea, 0x76, 0xac, 0x4b, 0x5b, 0x30, 0x97, 0xdf, 0x87,
	0xcd, 0x24, 0xda, 0x31, 0x67, 0x29, 0x89, 0xc5, 0x40, 0xa2, 0x5c, 0x81, 0xb2, 0xa2, 0xf9, 0xd4,
	0x0b, 0x3e, 0xfe, 0x18, 0x96, 0x11, 0x46, 0x4d, 0x86, 0xb6, 0x61, 0x09, 0x6a, 0xb6, 0x26, 0xdb,
	0xb0, 0x72, 0xad, 0x99, 0x13, 0xca, 0xd4, 0xcb, 0x29, 0x1c, 0x90, 0x3f, 0x02, 0x10, 0x1c, 0x50,
	0xce, 0x43, 0x58, 0x71, 0x11, 0xaa, 0xe7, 0xf6, 0x0a, 0xfb, 0xa5, 0x46, 0xe9, 0x80, 0x5f, 0x0a,
	0x52, 0x28, 0x7c, 0x47, 0xde, 0x87, 0xca, 0x49, 0xbf, 0x77, 0x62, 0x78, 0xfe, 0xbc, 0x39, 0xf2,
	0x09, 0xe5, 0x7e, 0x58, 0x66, 0xa4, 0x78, 0x0a, 0x77, 0xac, 0xf9, 0x86, 0x6d, 0xa1, 0x5e, 0x96,
	0x36, 0xa6, 0x81, 0x5e, 0xb8, 0x26, 0xf7, 0x01, 0x5e, 0x18, 0xfa, 0x88, 0xfa, 0x68, 0x74, 0xc1,
	0x22, 0x86, 0x89, 0xb1, 0x2f, 0xc4, 0xd9, 0x23, 0xaf, 0x2b, 0xdb, 0xf3, 0xeb, 0xcb, 0x9c, 0x17,
	0xae, 0xc9, 0x7b, 0x50, 0x1d, 0x5e, 0x69, 0x96, 0x45, 0x4d, 0x75, 0xa8, 0x39, 0xda, 0xd0, 0xf0,
	0x67, 0xf5, 0x95, 0xbd, 0xdc, 0x7e, 0x41, 0x99, 0xc3, 0x93, 0x3d, 0x28, 0xf9, 0x9a, 0x8b, 0x52,
	0x86, 0xb6, 0x75, 0x59, 0x5f, 0x65, 0x97, 0x16, 0x47, 0x91, 0x37, 0x61, 0x83, 0x79, 0xd7, 0x25,
	0xa5, 0xea, 0xd8, 0xd3, 0xfc, 0xfa, 0x1a, 0x63, 0x95, 0x44, 0x12, 0x09, 0xd6, 0x71, 0x8d, 0xd6,
	0xa9, 0xaf, 0x33, 0xd3, 0x86, 0x30, 0xd9, 0x87, 0x5b, 0xbe, 0x31, 0xa6, 0xaa, 0x69, 0x0f, 0x9f,
	0xa9, 0x3a, 0x35, 0x7d, 0xad, 0x5e, 0xdc, 0xcb, 0xed, 0x6f, 0x28, 0x69, 0x34, 0xca, 0x1a, 0x1b,
	0x96, 0x7a, 0xe5, 0x9b, 0x43, 0x2e, 0x0b, 0xb8, 0xac, 0x04, 0x92, 0x34, 0xa0, 0x16, 0x9c, 0x03,
	0x65, 0x38, 0xd4, 0x1d, 0xcf, 0x5c, 0x43, 0xd3, 0xeb, 0x25, 0x46, 0xbd, 0x25, 0x36, 0x8f, 0x29,
	0xed, 0x05, 0x5b, 0xe4, 0x1e, 0x80, 0xe9, 0x39, 0xaa, 0xb0, 0x61, 0x99, 0x79, 0x6c, 0xd1, 0xf4,
	0x9c, 0x1e, 0x37, 0x63, 0x03, 0x6a, 0x63, 0x6d, 0xaa, 0x1a, 0xc2, 0x49, 0x55, 0x7d, 0xe2, 0xb2,
	0xbb, 0xaa, 0x6f, 0x70, 0x96, 0x63, 0x6d, 0x1a, 0x38, 0xf0, 0x91, 0xd8, 0x22, 0x9f, 0x40, 0x3d,
	0x50, 0x63, 0x6c, 0x58, 0xc6, 0x78, 0x32, 0x8e, 0x6c, 0x54, 0x61, 0x9f, 0x05, 0x6a, 0x9e, 0xf2,
	0xed, 0x63, 0x4a, 0x4f, 0x3d, 0xcd, 0x97, 0x7f, 0x9f, 0x83, 0x72, 0xe8, 0x3d, 0xe8, 0x70, 0x8f,
	0x60, 0xd9, 0xf4, 0x9c, 0xc0, 0xdf, 0xee, 0x09, 0x7f, 0x8b, 0x93, 0x1c, 0x9c, 0x78, 0x8e, 0xd7,
	0xb6, 0x7c, 0x77, 0xa6, 0x30, 0x52, 0xa9, 0x0b, 0xc5, 0x10, 0x45, 0xaa, 0x50, 0x88, 0x5e, 0x05,
	0x2e, 0xc9, 0xfb, 0x71, 0x37, 0x2f, 0x35, 0x6a, 0x11, 0xcb, 0x98, 0x23, 0x0a, 0xef, 0xff, 0x34,
	0xff, 0xff, 0x39, 0xb9, 0x05, 0x3b, 0x0a, 0x1d, 0x19, 0x9e, 0x4f, 0xdd, 0x9e, 0x36, 0x1b, 0x53,
	0x2b, 0x74, 0xec, 0x1a, 0xac, 0xa2, 0xe5, 0x0c, 0x5d, 0xf0, 0x5f, 0x31, 0x3d, 0xa7, 0xa3, 0xa3,
	0xe3, 0x5d, 0x98, 0xf6, 0x05, 0x73, 0xc7, 0xb2, 0xc2, 0xd6, 0xf2, 0x0e, 0x6c, 0xcf, 0x31, 0x71,
	0xcc, 0x99, 0xdc, 0x84, 0xed, 0xd6, 0x15, 0x1d, 0x3e, 0x6b, 0x71, 0x73, 0x78, 0xaf, 0xc8, 0x3a,
	0x1f, 0x63, 0xbd, 0x0f, 0x24, 0xc5, 0x02, 0x0d, 0x97, 0x45, 0x79, 0x0c, 0xb5, 0x33, 0x87, 0x5a,
	0x27, 0xfd, 0x9e, 0xa0, 0x7d, 0x89, 0xb4, 0x45, 0x0f, 0xb7, 0x06, 0x5b, 0x69, 0x3e, 0x78, 0x96,
	0x6f, 0x80, 0x20, 0x3a, 0xc5, 0x9b, 0x33, 0xf9, 0x32, 0x11, 0x9a, 0xbe, 0xa4, 0x33, 0xf2, 0x01,
	0x6c, 0x5a, 0x18, 0xf0, 0x8c, 0x21, 0xb3, 0xf8, 0xc0, 0x7e, 0x46, 0x2d, 0x21, 0x67, 0x7e, 0x43,
	0x26, 0x50, 0x4d, 0xf0, 0x46, 0x79, 0x0d, 0xa8, 0x23, 0xae, 0x37, 0xb9, 0x30, 0x8d, 0x61, 0xa6,
	0xd4, 0xf9, 0x80, 0x58, 0x87, 0x9d, 0x8c, 0x6f, 0x90, 0xdb, 0x47, 0xb0, 0xd6, 0xd2, 0x1c, 0x7f,
	0x78, 0xa5, 0x91, 0x0a, 0xe4, 0x43, 0x53, 0xe4, 0x0d, 0x1d, 0x23, 0xa3, 0x31, 0xd6, 0x46, 0x54,
	0x18, 0x93, 0x03, 0xf2, 0xff, 0x82, 0x74, 0xee, 0xe8, 0x9a, 0x4f, 0x05, 0x9b, 0x9e, 0x6d, 0x1a,
	0xc3, 0xd9, 0x4b, 0x8e, 0x2d, 0x4b, 0x50, 0xcf, 0xfc, 0x0a, 0x55, 0xf8, 0x4d, 0x0e, 0x48, 0x53,
	0xd7, 0x8f, 0x27, 0x96, 0xde, 0xb1, 0x8c, 0x78, 0xfc, 0xb4, 0x6c, 0x9d, 0x76, 0x8e, 0x02, 0x56,
	0x1c, 0x7a, 0x3d, 0x0b, 0xa6, 0xc2, 0x64, 0x22, 0x29, 0x5d, 0x69, 0xde, 0x15, 0x0b, 0x93, 0x65,
	0x85, 0xad, 0xe5, 0xdf, 0xe5, 0xa1, 0x9a, 0x50, 0x04, 0x3d, 0xaa, 0x0e, 0x6b, 0x9a, 0xae, 0xbb,
	0xd4, 0xf3, 0x84, 0x1e, 0x01, 0x98, 0xf2, 0x93, 0x88, 0xf5, 0x7d, 0x00, 0x8c, 0x60, 0x4f, 0xa8,
	0x31, 0xba, 0xf2, 0x99, 0xd8, 0x82, 0x12, 0xc3, 0xe0, 0x01, 0xc6, 0xda, 0xb4, 0x69, 0x9a, 0xf6,
	0x0b, 0xaa, 0x1f, 0x51, 0xc7, 0xf6, 0x0c, 0x1e, 0xae, 0x0b, 0xca, 0xfc, 0x06, 0x91, 0xa1, 0x4c,
	0x5d, 0xd7, 0x76, 0x4f, 0xa9, 0xe7, 0xe1, 0x65, 0xac, 0xf0, 0x04, 0x1e, 0xc7, 0x61, 0x3c, 0x75,
	0xe9, 0xf3, 0x89, 0xe1, 0x52, 0x5d, 0xa1, 0x1e, 0x75, 0xaf, 0x29, 0x8b, 0xdb, 0x05, 0x25, 0x8d,
	0x66, 0xb2, 0x0d, 0x2b, 0x25, 0x7b, 0x4d, 0xc8, 0x4e, 0x6f, 0xc8, 0x17, 0xb0, 0x2d, 0xec, 0xd1,
	0xf7, 0x35, 0x7f, 0x12, 0x3e, 0xd3, 0xbb, 0x50, 0x14, 0x46, 0x10, 0x39, 0xb1, 0xa8, 0x44, 0x88,
	0xd7, 0x74, 0xf1, 0x7f, 0xe4, 0xc3, 0xdb, 0x0f, 0x84, 0xa0, 0xd9, 0x5b, 0xb0, 0xee, 0x31, 0x30,
	0xcc, 0xba, 0xef, 0x88, 0x90, 0x35, 0x4f, 0x7c, 0xd0, 0x17, 0x94, 0x3c, 0x1e, 0x86, 0x1f, 0x4a,
	0x1e, 0x6c, 0x34, 0xb9, 0x5a, 0x9c, 0x02, 0x5d, 0xdc, 0x9f, 0x06, 0x2e, 0xee, 0x4f, 0xf1, 0x0a,
	0xb5, 0xb1, 0x3d, 0xb1, 0x7c, 0xa6, 0x5f, 0x41, 0x11, 0x10, 0x1e, 0x10, 0x53, 0x9d, 0xe1, 0x8e,
	0xa9, 0xce, 0x6e, 0x70, 0x5d, 0x89, 0x10, 0xb8, 0x7b, 0xc1, 0xee, 0x33, 0x70, 0xa0, 0xa2, 0x12,
	0x21, 0x24, 0x1d, 0x36, 0x12, 0xfa, 0x64, 0x04, 0xe3, 0xcf, 0x92, 0xc1, 0xf8, 0x86, 0x93, 0x25,
	0xd4, 0x8f, 0x87, 0xe7, 0x36, 0xd6, 0x43, 0x63, 0xfb, 0x9a, 0xe2, 0x17, 0xc1, 0xbd, 0xdc, 0xe8,
	0xab, 0x59, 0x07, 0x95, 0x7f, 0x09, 0xb7, 0xe2, 0x6c, 0xd0, 0xf2, 0x6f, 0x43, 0xc5, 0x49, 0x04,
	0x7c, 0xc1, 0x2b, 0x85, 0x9d, 0x73, 0xcc, 0xfc, 0xbc, 0x63, 0xca, 0x9f, 0xc1, 0xae, 0x42, 0x75,
	0x4a, 0xc7, 0x5c, 0x08, 0x3b, 0x5e, 0xe8, 0x45, 0x7b, 0x50, 0x12, 0x2c, 0xd9, 0x4b, 0xe4, 0x52,
	0xe2, 0x28, 0xf9, 0x43, 0xb8, 0x9d, 0xf5, 0xb9, 0x08, 0xf4, 0xfe, 0x34, 0x0c, 0x57, 0x6c, 0x2d,
	0xff, 0x14, 0x6a, 0x8f, 0xa9, 0xdf, 0x7f, 0xa1, 0x39, 0xa9, 0x8c, 0xf5, 0x8a, 0x47, 0x92, 0xff,
	0x9c, 0x87, 0xad, 0x34, 0x07, 0x14, 0x26, 0x43, 0x59, 0x50, 0xb6, 0xf1, 0x74, 0xe2, 0xeb, 0x04,
	0x8e, 0x7c, 0x0c, 0xdb, 0x97, 0xa8, 0x9e, 0x4a, 0xa7, 0x43, 0x4a, 0x75, 0xaa, 0xab, 0xa6, 0x31,
	0x36, 0xb8, 0xbd, 0xd7, 0x15, 0xc2, 0xf6, 0xda, 0x62, 0xeb, 0x04, 0x77, 0x48, 0x0b, 0xc0, 0x7b,
	0xa1, 0x39, 0x2a, 0xb3, 0x18, 0xf3, 0xb2, 0x4a, 0xe3, 0x4d, 0xe1, 0x0a, 0x19, 0x5a, 0x1c, 0x20,
	0x82, 0xc9, 0x52, 0x8a, 0x5e, 0xb0, 0x94, 0x5d, 0x28, 0x86, 0x78, 0x52, 0x86, 0xf5, 0xee, 0x99,
	0xda, 0x56, 0x94, 0x33, 0xa5, 0xba, 0x44, 0x76, 0x80, 0x1c, 0x9f, 0x77, 0x8f, 0xfa, 0x6a, 0xfb,
	0x69, 0xab, 0xdd, 0x3e, 0x52, 0x4f, 0x3a, 0xa7, 0x9d, 0x41, 0x35, 0x47, 0xaa, 0x50, 0x1e, 0x3c,
	0x55, 0x07, 0x67, 0x67, 0x6a, 0xff, 0xb4, 0x79, 0x72, 0x52, 0xcd, 0x93, 0x3b, 0x70, 0xbb, 0xd3,
	0xfd, 0xea, 0xac, 0xd3, 0x6a, 0xab, 0xcd, 0xd3, 0xb3, 0xf3, 0xee, 0x40, 0x3d, 0xed, 0xf4, 0x4f,
	0x9b, 0x83, 0xd6, 0x93, 0x6a, 0x01, 0xc9, 0xfb, 0x3f, 0x6f, 0xf6, 0xd4, 0xf6, 0xd3, 0x5e, 0x47,
	0x69, 0x1f, 0x55, 0x97, 0xe5, 0x19, 0xd4, 0xf9, 0xb5, 0x64, 0x98, 0x5a, 0x82, 0x75, 0xc7, 0xa5,
	0x3c, 0x6f, 0xf0, 0x36, 0x20, 0x84, 0xc9, 0x83, 0x64, 0x69, 0xc9, 0xfb, 0x01, 0xe0, 0xa8, 0x16,
	0x56, 0x96, 0x7b, 0x50, 0xf6, 0x34, 0x1f, 0xeb, 0x37, 0xf5, 0x62, 0xe6, 0xd3, 0x20, 0x76, 0x7a,
	0x9a, 0xdf, 0xa3, 0xee, 0xe1, 0xcc, 0xa7, 0xf2, 0x07, 0x58, 0x95, 0xcc, 0x89, 0x5e, 0xe4, 0x10,
	0x67, 0xe8, 0xdd, 0xbc, 0xfc, 0x88, 0xe9, 0xa7, 0xd3, 0x6b, 0x63, 0x18, 0xe5, 0x95, 0x10, 0x46,
	0x87, 0x34, 0x31, 0x42, 0x5b, 0x86, 0x35, 0xea, 0x1c, 0x09, 0x87, 0x8e, 0xa3, 0xe4, 0x77, 0x61,
	0x23, 0x62, 0x28, 0xb2, 0x03, 0xbb, 0xb0, 0x90, 0x5b, 0x00, 0xca, 0x2e, 0x54, 0x52, 0xa6, 0x59,
	0x48, 0x8b, 0x3b, 0x86, 0x75, 0x6d, 0x1b, 0xc3, 0xe0, 0x15, 0x05, 0x20, 0xe6, 0x60, 0x47, 0x9b,
	0x51, 0x2a, 0x8a, 0x7c, 0x0e, 0xc4, 0x5e, 0xf3, 0x72, 0xe2, 0x35, 0xbf, 0x09, 0xe5, 0x0e, 0xff,
	0x90, 0x6b, 0xb7, 0x0d, 0x2b, 0x71, 0x87, 0xe5, 0x80, 0xfc, 0x21, 0x6c, 0x9e, 0x3b, 0xa6, 0xad,
	0xe9, 0xc7, 0x86, 0x49, 0x63, 0xca, 0x0d, 0x6d, 0xcb, 0xa7, 0x96, 0x2f, 0xae, 0x2d, 0x00, 0xe5,
	0x37, 0xe0, 0x56, 0x9c, 0x1c, 0xf9, 0x56, 0xa1, 0x30, 0x09, 0x3b, 0x43, 0x5c, 0xca, 0x1b, 0x50,
	0xea, 0x19, 0xd6, 0x28, 0x78, 0x48, 0x6f, 0x41, 0x91, 0x83, 0xc2, 0x46, 0xd7, 0xd4, 0xf5, 0xb0,
	0x78, 0x16, 0xe7, 0x16, 0xa0, 0xfc, 0xd7, 0x1c, 0x94, 0xcf, 0x5c, 0x3d, 0x71, 0x3b, 0xc7, 0x13,
	0xd3, 0xec, 0x46, 0xcd, 0x50, 0x08, 0x23, 0x1b, 0x11, 0x0d, 0x03, 0x23, 0x09, 0x10, 0xaf, 0xbe,
	0x85, 0x2d, 0x0d, 0xb7, 0x11, 0x5b, 0xe3, 0xd1, 0x31, 0x68, 0x52, 0x11, 0x9f, 0x39, 0x80, 0x8a,
	0x7f, 0x63, 0x38, 0x22, 0x87, 0xe2, 0x12, 0xb9, 0xb6, 0xd0, 0x76, 0xee, 0x8c, 0xa5, 0xcc, 0xa2,
	0x12, 0x80, 0xcc, 0x78, 0x63, 0xcd, 0x30, 0x59, 0x7a, 0x44, 0xe3, 0x21, 0x20, 0x97, 0x01, 0x84,
	0xc6, 0x58, 0xba, 0xfc, 0x90, 0x03, 0xd2, 0xa7, 0x7e, 0x17, 0x2b, 0x93, 0xa8, 0x59, 0x5d, 0xd8,
	0x09, 0x8b, 0x4c, 0x90, 0x8f, 0x32, 0x41, 0xd8, 0x7d, 0xf2, 0xea, 0x84, 0x03, 0x98, 0x60, 0xb0,
	0x11, 0xf2, 0x7c, 0x6d, 0xec, 0x88, 0x2b, 0x8e, 0x10, 0xb8, 0xeb, 0x19, 0x23, 0x4b, 0xf3, 0x27,
	0x2e, 0x2f, 0x07, 0xca, 0x4a, 0x84, 0xc0, 0x2a, 0x35, 0xa1, 0x91, 0x68, 0xab, 0x3f, 0x07, 0xf2,
	0xf8, 0x3f, 0x50, 0x54, 0x1e, 0xb1, 0xc8, 0x98, 0x66, 0x1b, 0xe9, 0x9f, 0x5b, 0xa8, 0x7f, 0xfe,
	0x46, 0xfd, 0x0b, 0x69, 0xfd, 0xff, 0x95, 0x83, 0xda, 0xcf, 0x6c, 0xc3, 0x6a, 0x0d, 0x7a, 0x7d,
	0xea, 0xa1, 0x9b, 0x04, 0xca, 0x1e, 0x41, 0xd1, 0xd1, 0x5c, 0x7f, 0x36, 0x98, 0x39, 0x5c, 0x5e,
	0xa5, 0xf1, 0xb6, 0x08, 0x97, 0x99, 0x1f, 0x1c, 0xf4, 0x02, 0x6a, 0x25, 0xfa, 0x10, 0xa5, 0x33,
	0x80, 0xf9, 0x18, 0x3f, 0x60, 0x84, 0xc8, 0xae, 0x5d, 0x0a, 0x8b, 0x8a, 0x4b, 0x3c, 0x09, 0x17,
	0xd9, 0x39, 0x0a, 0x0a, 0x81, 0x10, 0x21, 0x3f, 0x84, 0x62, 0xa8, 0x01, 0x29, 0xc2, 0x4a, 0xaf,
	0xf9, 0x75, 0x1b, 0xe3, 0xb2, 0x58, 0xb6, 0xab, 0x39, 0xb9, 0x0b, 0x3b, 0x69, 0xd5, 0x85, 0x61,
	0x13, 0xac, 0x73, 0x29, 0xd6, 0x78, 0x6f, 0x74, 0xea, 0x18, 0xee, 0x2c, 0x48, 0xe7, 0x1c, 0x92,
	0x3f, 0x05, 0x69, 0x40, 0xdd, 0xb1, 0x61, 0x61, 0xa5, 0x3d, 0x67, 0xc0, 0x1b, 0x79, 0xca, 0xf7,
	0xe0, 0x4e, 0xe6, 0xb7, 0xc2, 0x81, 0xfe, 0x90, 0x87, 0xb7, 0x83, 0xd8, 0x37, 0x70, 0x35, 0xcb,
	0xc3, 0xe6, 0xd7, 0xb6, 0x5a, 0xbc, 0x2a, 0xe2, 0xed, 0xa3, 0x90, 0xc3, 0x42, 0x71, 0x28, 0x82,
	0xad, 0x5f, 0xb3, 0x6a, 0xff, 0x16, 0xaa, 0x09, 0x24, 0xde, 0x38, 0x4f, 0x90, 0x9f, 0x07, 0xb3,
	0x97, 0x57, 0x52, 0xe5, 0xa0, 0x9b, 0xe2, 0xa2, 0xcc, 0xf1, 0x95, 0x9b, 0x50, 0x4d, 0x53, 0x91,
	0x5d, 0xa8, 0x29, 0xed, 0xe6, 0xd1, 0xd7, 0xaa, 0xd2, 0x6e, 0xb5, 0x3b, 0x5f, 0xb5, 0xd5, 0x5e,
	0xf3, 0xeb, 0xd3, 0x76, 0x77, 0x50, 0x5d, 0x22, 0x04, 0x2a, 0xad, 0x27, 0xcd, 0x6e, 0xb7, 0x7d,
	0xa2, 0x9e, 0xf5, 0xda, 0xdd, 0xf6, 0x51, 0x35, 0x27, 0xbf, 0x0b, 0xef, 0xbc, 0x54, 0x1f, 0x61,
	0xc6, 0x2f, 0xe1, 0x4e, 0xd8, 0x11, 0x53, 0xd7, 0xb0, 0x75, 0x63, 0xd8, 0x9f, 0x59, 0xc3, 0xc0,
	0x74, 0x99, 0x66, 0xca, 0x2d, 0xaa, 0x9d, 0xef, 0xc3, 0xdd, 0x6c, 0x66, 0x42, 0xd8, 0x08, 0xea,
	0x87, 0xb6, 0xe9, 0x7f, 0xa7, 0x50, 0x8c, 0xb8, 0x14, 0x73, 0xe6, 0x89, 0x3d, 0x7c, 0x36, 0x71,
	0x06, 0x53, 0xb2, 0x0b, 0xeb, 0x17, 0xb8, 0x17, 0xb5, 0xbf, 0x6b, 0x0c, 0xee, 0xe8, 0x58, 0xca,
	0xe0, 0x6b, 0xb5, 0x27, 0xbe, 0xca, 0xca, 0x5a, 0xf5, 0x8a, 0xb7, 0x32, 0x79, 0x36, 0xa3, 0x21,
	0x62, 0xef, 0x30, 0x6a, 0x69, 0xe4, 0xbf, 0xe7, 0x61, 0xb7, 0x37, 0xf1, 0xae, 0x06, 0xd3, 0xb8,
	0x29, 0x83, 0x43, 0xdd, 0x81, 0x22, 0xcf, 0xb1, 0x91, 0xac, 0x20, 0xe9, 0xb2, 0x2e, 0xd3, 0x37,
	0x7c, 0x33, 0x78, 0x8b, 0x1c, 0x60, 0x7d, 0xbc, 0xad, 0x87, 0x21, 0x1d, 0xd7, 0xe4, 0x36, 0xac,
	0xf9, 0x53, 0x35, 0xd6, 0xb5, 0xad, 0xfa, 0x53, 0xac, 0xb8, 0xf1, 0x35, 0x78, 0x43, 0xd7, 0x70,
	0x7c, 0x11, 0x0d, 0x05, 0x44, 0xde, 0x83, 0xcd, 0xb8, 0xfe, 0xea, 0x95, 0x61, 0xf9, 0x2c, 0xca,
	0x6f, 0x28, 0xb7, 0x2e, 0x22, 0xed, 0x9f, 0x18, 0x96, 0x4f, 0xbe, 0x85, 0x87, 0xdc, 0x1c, 0x2e,
	0xb7, 0x95, 0xca, 0x4a, 0x33, 0x93, 0x59, 0x4b, 0xf5, 0xa7, 0xaa, 0x61, 0x5d, 0xda, 0x2c, 0x13,
	0x94, 0x1a, 0x0f, 0x84, 0x0b, 0x2e, 0x32, 0xed, 0x93, 0x25, 0xe5, 0xee, 0xc5, 0x82, 0x3d, 0x0c,
	0x9e, 0x87, 0xab, 0xb0, 0x8c, 0xec, 0xe4, 0xbb, 0x20, 0x65, 0x19, 0x4d, 0x5c, 0xde, 0x2e, 0xdc,
	0x3e, 0x44, 0x39, 0x4d, 0xc7, 0xf9, 0x8a, 0xe7, 0xcb, 0x70, 0x9e, 0xf9, 0x08, 0x6a, 0xf3, 0x5b,
	0x73, 0xa9, 0xb6, 0x10, 0x4f, 0xb5, 0xf7, 0xe1, 0xee, 0x63, 0xea, 0x0b, 0x8d, 0x14, 0x7b, 0xe2,
	0x1b, 0xd6, 0x08, 0xa3, 0x79, 0xc0, 0xf2, 0xff, 0x40, 0x5a, 0xb0, 0x8f, 0x7c, 0x6f, 0xc3, 0x1a,
	0x76, 0xdf, 0xc1, 0xfd, 0x95, 0x45, 0x33, 0xae, 0x37, 0xbe, 0xcf, 0xc1, 0xba, 0x28, 0x39, 0x5c,
	0xf2, 0x05, 0x54, 0x02, 0x77, 0x3c, 0x62, 0xd7, 0x4b, 0x76, 0x52, 0xaf, 0x55, 0x48, 0x93, 0xb6,
	0xe7, 0xf0, 0x98, 0x4d, 0x97, 0xc8, 0x4f, 0xa0, 0xd4, 0xa7, 0xd8, 0x7d, 0xf3, 0xea, 0x27, 0x98,
	0x52, 0x25, 0x0b, 0x29, 0x69, 0x4b, 0xa0, 0xe3, 0xb5, 0x8e, 0xbc, 0xd4, 0xf8, 0x02, 0x4a, 0x2d,
	0xcd, 0xd5, 0x59, 0x7a, 0xa6, 0x2e, 0x79, 0x04, 0x2b, 0x6c, 0x49, 0x02, 0xf2, 0x78, 0xa5, 0x21,
	0x6d, 0x26, 0x91, 0x9c, 0xc3, 0xf7, 0x39, 0x28, 0xf4, 0x6c, 0xef, 0x47, 0x38, 0xc8, 0x17, 0x00,
	0xbc, 0x68, 0x3a, 0xb1, 0x47, 0x36, 0xa9, 0x0b, 0xaa, 0xb9, 0xb2, 0x4b, 0xda, 0xc9, 0xd8, 0xe1,
	0xba, 0xfc, 0x36, 0x0f, 0xa5, 0xf8, 0x8c, 0xf8, 0x00, 0x96, 0xb1, 0xa4, 0x22, 0x24, 0xb0, 0x49,
	0x54, 0x6e, 0x49, 0xd5, 0x04, 0x8e, 0x6b, 0xf0, 0x08, 0x56, 0xd8, 0x04, 0x3b, 0x3c, 0x7e, 0x7c,
	0x22, 0x1e, 0x1e, 0x3f, 0x1a, 0x72, 0xcb, 0x4b, 0x44, 0x81, 0x6a, 0xda, 0xad, 0xc8, 0xfd, 0xc0,
	0xd9, 0xb3, 0x5d, 0x51, 0xba, 0xbb, 0x70, 0x9f, 0xf3, 0x3c, 0x86, 0x72, 0x7c, 0x6e, 0x4f, 0xa4,
	0xd0, 0x60, 0x73, 0x33, 0x7e, 0xa9, 0x9e, 0xb9, 0xc7, 0xcd, 0xf1, 0xb7, 0x3c, 0x6c, 0x88, 0xd9,
	0xd1, 0x99, 0x43, 0x2d, 0xea, 0x92, 0x4f, 0x60, 0x4d, 0x0c, 0x44, 0x49, 0x2d, 0x3d, 0x20, 0x4d,
	0xfa, 0x49, 0x7c, 0x6e, 0x2a, 0x2f, 0x91, 0x13, 0xa8, 0x24, 0xe7, 0x78, 0x24, 0x38, 0x44, 0xe6,
	0x98, 0x50, 0x92, 0x16, 0xec, 0x72, 0x6e, 0xb1, 0x1e, 0x43, 0xb8, 0x29, 0xb9, 0x97, 0x72, 0x8a,
	0x94, 0xfb, 0xde, 0x59, 0xb4, 0xcd, 0x19, 0x76, 0xf0, 0xa0, 0xb1, 0xc1, 0x26, 0x09, 0xe8, 0xb3,
	0x26, 0xa6, 0xd2, 0x6e, 0xf6, 0x26, 0x37, 0x9a, 0x09, 0x5b, 0x89, 0x91, 0x9f, 0xb0, 0xdc, 0x39,
	0x6c, 0xce, 0x4d, 0x03, 0xc9, 0x83, 0xd8, 0x29, 0xb3, 0x66, 0x8b, 0xd2, 0xbd, 0xc5, 0x04, 0x5c,
	0xda, 0x5f, 0x56, 0xa0, 0x84, 0x1d, 0xfa, 0xa9, 0x66, 0x69, 0x23, 0xea, 0x92, 0x16, 0x94, 0x62,
	0xc3, 0x4b, 0xb2, 0x1b, 0xfb, 0x3e, 0xc5, 0xfa, 0x76, 0xd6, 0x16, 0xb7, 0xc6, 0x2f, 0x60, 0x2b,
	0x63, 0x70, 0x48, 0x1e, 0x86, 0xef, 0x66, 0xd1, 0x28, 0x52, 0x7a, 0x70, 0x13, 0x09, 0x67, 0xde,
	0x82, 0x52, 0x6c, 0xde, 0x17, 0x6a, 0x38, 0x3f, 0x8c, 0x0c, 0x35, 0x4c, 0x8f, 0x07, 0xf9, 0x7d,
	0x25, 0x06, 0x37, 0xe1, 0x7d, 0x65, 0x8d, 0xce, 0xa4, 0xdd, 0x85, 0xb3, 0x1e, 0x1e, 0x35, 0xa2,
	0x69, 0x0c, 0x89, 0x9e, 0x43, 0x6a, 0xce, 0x23, 0xed, 0x64, 0xec, 0x70, 0x0e, 0x4f, 0x81, 0xcc,
	0x4f, 0x4c, 0xc8, 0x5e, 0x48, 0xbf, 0x60, 0x16, 0x23, 0xdd, 0xbf, 0x81, 0x22, 0x7c, 0x35, 0xc9,
	0xa1, 0x44, 0xf8, 0x6a, 0x32, 0x67, 0x2e, 0xe1, 0xab, 0xc9, 0x98, 0x64, 0xc8, 0x4b, 0xe4, 0xd7,
	0x39, 0x78, 0xf0, 0x92, 0x92, 0x89, 0x7c, 0xf8, 0x5a, 0xa5, 0x9e, 0x74, 0xf0, 0xaa, 0xe4, 0x22,
	0xbf, 0x2e, 0x35, 0xfe, 0x54, 0x80, 0x35, 0xd4, 0xcd, 0xe1, 0xce, 0xfa, 0x5f, 0xe5, 0x0a, 0x3f,
	0xae, 0xb9, 0xcf, 0x61, 0x73, 0x6e, 0x6c, 0x12, 0xbe, 0xf8, 0x45, 0xb3, 0x1c, 0xe9, 0xde, 0x62,
	0x02, 0xce, 0x56, 0x63, 0x03, 0xb7, 0xf9, 0xa2, 0x81, 0xbc, 0x11, 0x69, 0xb3, 0xb0, 0xe4, 0x90,
	0x1e, 0xde, 0x4c, 0xc4, 0x83, 0xca, 0x3f, 0x73, 0x50, 0x68, 0x0d, 0x7a, 0xe4, 0x0c, 0x2a, 0xc9,
	0x4e, 0x29, 0xb4, 0x47, 0x66, 0xef, 0x17, 0xea, 0x9e, 0xdd, 0x5e, 0xc9, 0x4b, 0xe4, 0x57, 0xb0,
	0x95, 0xd1, 0xee, 0x84, 0x81, 0x65, 0x71, 0x1b, 0x25, 0xc9, 0x37, 0x91, 0x84, 0xce, 0xf5, 0xc7,
	0x1c, 0xac, 0x07, 0xed, 0x32, 0x39, 0xc6, 0xba, 0x26, 0xec, 0x9e, 0x43, 0xef, 0x9a, 0x1f, 0x1d,
	0x84, 0xf7, 0x98, 0xd5, 0xc3, 0x63, 0x36, 0x2d, 0x3d, 0xce, 0xe0, 0xf3, 0x78, 0x31, 0x9f, 0xc7,
	0x59, 0x7c, 0x1a, 0xcf, 0xa1, 0x8c, 0x8d, 0x02, 0xaf, 0x3b, 0xa9, 0x4b, 0xb4, 0xd8, 0xef, 0x74,
	0xb1, 0x46, 0x82, 0xc8, 0xe9, 0x54, 0x35, 0xdf, 0xb2, 0x48, 0x6f, 0xdc, 0x48, 0x13, 0x13, 0x59,
	0x89, 0x17, 0xbb, 0xd4, 0x25, 0x6a, 0xf4, 0x0b, 0x63, 0xb2, 0x04, 0x0e, 0xe3, 0xd5, 0xc2, 0x96,
	0x22, 0xf4, 0x9d, 0x1b, 0xea, 0xe7, 0xa5, 0xc6, 0x10, 0xaa, 0x89, 0x3f, 0x19, 0xa0, 0xd0, 0x33,
	0xa8, 0x24, 0xff, 0x78, 0x10, 0xfa, 0x51, 0xe6, 0x9f, 0x1a, 0x42, 0x3f, 0x5a, 0xf0, 0x6f, 0x85,
	0xa5, 0xc6, 0x11, 0xac, 0xf6, 0x8d, 0x11, 0xa6, 0xd5, 0x4f, 0x61, 0x4d, 0xfc, 0x8d, 0x22, 0x2c,
	0x48, 0x92, 0x7f, 0xd3, 0x08, 0xe3, 0x76, 0xea, 0xdf, 0x16, 0xf2, 0xd2, 0xe1, 0x5b, 0x50, 0x33,
	0xec, 0x83, 0x91, 0xeb, 0x0c, 0x05, 0x89, 0x47, 0x5d, 0x2c, 0x3c, 0x0f, 0x81, 0x15, 0x56, 0x3d,
	0xd7, 0xf6, 0xed, 0x5e, 0xee, 0x62, 0x95, 0xfd, 0x0f, 0xe4, 0x7f, 0xfe, 0x1d, 0x00, 0x00, 0xff,
	0xff, 0xad, 0x2a, 0xb4, 0x97, 0x16, 0x22, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// InvoicerClient is the client API for Invoicer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InvoicerClient interface {
	RegisterDevice(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterReply, error)
	SendInvoice(ctx context.Context, in *PaymentRequest, opts ...grpc.CallOption) (*InvoiceReply, error)
}

type invoicerClient struct {
	cc grpc.ClientConnInterface
}

func NewInvoicerClient(cc grpc.ClientConnInterface) InvoicerClient {
	return &invoicerClient{cc}
}

func (c *invoicerClient) RegisterDevice(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterReply, error) {
	out := new(RegisterReply)
	err := c.cc.Invoke(ctx, "/breez.Invoicer/RegisterDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *invoicerClient) SendInvoice(ctx context.Context, in *PaymentRequest, opts ...grpc.CallOption) (*InvoiceReply, error) {
	out := new(InvoiceReply)
	err := c.cc.Invoke(ctx, "/breez.Invoicer/SendInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InvoicerServer is the server API for Invoicer service.
type InvoicerServer interface {
	RegisterDevice(context.Context, *RegisterRequest) (*RegisterReply, error)
	SendInvoice(context.Context, *PaymentRequest) (*InvoiceReply, error)
}

// UnimplementedInvoicerServer can be embedded to have forward compatible implementations.
type UnimplementedInvoicerServer struct {
}

func (*UnimplementedInvoicerServer) RegisterDevice(ctx context.Context, req *RegisterRequest) (*RegisterReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterDevice not implemented")
}
func (*UnimplementedInvoicerServer) SendInvoice(ctx context.Context, req *PaymentRequest) (*InvoiceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendInvoice not implemented")
}

func RegisterInvoicerServer(s *grpc.Server, srv InvoicerServer) {
	s.RegisterService(&_Invoicer_serviceDesc, srv)
}

func _Invoicer_RegisterDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InvoicerServer).RegisterDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.Invoicer/RegisterDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InvoicerServer).RegisterDevice(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Invoicer_SendInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InvoicerServer).SendInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.Invoicer/SendInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InvoicerServer).SendInvoice(ctx, req.(*PaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Invoicer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "breez.Invoicer",
	HandlerType: (*InvoicerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterDevice",
			Handler:    _Invoicer_RegisterDevice_Handler,
		},
		{
			MethodName: "SendInvoice",
			Handler:    _Invoicer_SendInvoice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "breez.proto",
}

// CardOrdererClient is the client API for CardOrderer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CardOrdererClient interface {
	Order(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*OrderReply, error)
}

type cardOrdererClient struct {
	cc grpc.ClientConnInterface
}

func NewCardOrdererClient(cc grpc.ClientConnInterface) CardOrdererClient {
	return &cardOrdererClient{cc}
}

func (c *cardOrdererClient) Order(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*OrderReply, error) {
	out := new(OrderReply)
	err := c.cc.Invoke(ctx, "/breez.CardOrderer/Order", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CardOrdererServer is the server API for CardOrderer service.
type CardOrdererServer interface {
	Order(context.Context, *OrderRequest) (*OrderReply, error)
}

// UnimplementedCardOrdererServer can be embedded to have forward compatible implementations.
type UnimplementedCardOrdererServer struct {
}

func (*UnimplementedCardOrdererServer) Order(ctx context.Context, req *OrderRequest) (*OrderReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Order not implemented")
}

func RegisterCardOrdererServer(s *grpc.Server, srv CardOrdererServer) {
	s.RegisterService(&_CardOrderer_serviceDesc, srv)
}

func _CardOrderer_Order_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardOrdererServer).Order(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.CardOrderer/Order",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardOrdererServer).Order(ctx, req.(*OrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CardOrderer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "breez.CardOrderer",
	HandlerType: (*CardOrdererServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Order",
			Handler:    _CardOrderer_Order_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "breez.proto",
}

// PosClient is the client API for Pos service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PosClient interface {
	RegisterDevice(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterReply, error)
	UploadLogo(ctx context.Context, in *UploadFileRequest, opts ...grpc.CallOption) (*UploadFileReply, error)
}

type posClient struct {
	cc grpc.ClientConnInterface
}

func NewPosClient(cc grpc.ClientConnInterface) PosClient {
	return &posClient{cc}
}

func (c *posClient) RegisterDevice(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterReply, error) {
	out := new(RegisterReply)
	err := c.cc.Invoke(ctx, "/breez.Pos/RegisterDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posClient) UploadLogo(ctx context.Context, in *UploadFileRequest, opts ...grpc.CallOption) (*UploadFileReply, error) {
	out := new(UploadFileReply)
	err := c.cc.Invoke(ctx, "/breez.Pos/UploadLogo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PosServer is the server API for Pos service.
type PosServer interface {
	RegisterDevice(context.Context, *RegisterRequest) (*RegisterReply, error)
	UploadLogo(context.Context, *UploadFileRequest) (*UploadFileReply, error)
}

// UnimplementedPosServer can be embedded to have forward compatible implementations.
type UnimplementedPosServer struct {
}

func (*UnimplementedPosServer) RegisterDevice(ctx context.Context, req *RegisterRequest) (*RegisterReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterDevice not implemented")
}
func (*UnimplementedPosServer) UploadLogo(ctx context.Context, req *UploadFileRequest) (*UploadFileReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadLogo not implemented")
}

func RegisterPosServer(s *grpc.Server, srv PosServer) {
	s.RegisterService(&_Pos_serviceDesc, srv)
}

func _Pos_RegisterDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosServer).RegisterDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.Pos/RegisterDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosServer).RegisterDevice(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pos_UploadLogo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosServer).UploadLogo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.Pos/UploadLogo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosServer).UploadLogo(ctx, req.(*UploadFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Pos_serviceDesc = grpc.ServiceDesc{
	ServiceName: "breez.Pos",
	HandlerType: (*PosServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterDevice",
			Handler:    _Pos_RegisterDevice_Handler,
		},
		{
			MethodName: "UploadLogo",
			Handler:    _Pos_UploadLogo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "breez.proto",
}

// InformationClient is the client API for Information service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InformationClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error)
	Rates(ctx context.Context, in *RatesRequest, opts ...grpc.CallOption) (*RatesReply, error)
	BreezAppVersions(ctx context.Context, in *BreezAppVersionsRequest, opts ...grpc.CallOption) (*BreezAppVersionsReply, error)
	ReceiverInfo(ctx context.Context, in *ReceiverInfoRequest, opts ...grpc.CallOption) (*ReceiverInfoReply, error)
}

type informationClient struct {
	cc grpc.ClientConnInterface
}

func NewInformationClient(cc grpc.ClientConnInterface) InformationClient {
	return &informationClient{cc}
}

func (c *informationClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error) {
	out := new(PingReply)
	err := c.cc.Invoke(ctx, "/breez.Information/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *informationClient) Rates(ctx context.Context, in *RatesRequest, opts ...grpc.CallOption) (*RatesReply, error) {
	out := new(RatesReply)
	err := c.cc.Invoke(ctx, "/breez.Information/Rates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *informationClient) BreezAppVersions(ctx context.Context, in *BreezAppVersionsRequest, opts ...grpc.CallOption) (*BreezAppVersionsReply, error) {
	out := new(BreezAppVersionsReply)
	err := c.cc.Invoke(ctx, "/breez.Information/BreezAppVersions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *informationClient) ReceiverInfo(ctx context.Context, in *ReceiverInfoRequest, opts ...grpc.CallOption) (*ReceiverInfoReply, error) {
	out := new(ReceiverInfoReply)
	err := c.cc.Invoke(ctx, "/breez.Information/ReceiverInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InformationServer is the server API for Information service.
type InformationServer interface {
	Ping(context.Context, *PingRequest) (*PingReply, error)
	Rates(context.Context, *RatesRequest) (*RatesReply, error)
	BreezAppVersions(context.Context, *BreezAppVersionsRequest) (*BreezAppVersionsReply, error)
	ReceiverInfo(context.Context, *ReceiverInfoRequest) (*ReceiverInfoReply, error)
}

// UnimplementedInformationServer can be embedded to have forward compatible implementations.
type UnimplementedInformationServer struct {
}

func (*UnimplementedInformationServer) Ping(ctx context.Context, req *PingRequest) (*PingReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedInformationServer) Rates(ctx context.Context, req *RatesRequest) (*RatesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Rates not implemented")
}
func (*UnimplementedInformationServer) BreezAppVersions(ctx context.Context, req *BreezAppVersionsRequest) (*BreezAppVersionsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BreezAppVersions not implemented")
}
func (*UnimplementedInformationServer) ReceiverInfo(ctx context.Context, req *ReceiverInfoRequest) (*ReceiverInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiverInfo not implemented")
}

func RegisterInformationServer(s *grpc.Server, srv InformationServer) {
	s.RegisterService(&_Information_serviceDesc, srv)
}

func _Information_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InformationServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.Information/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InformationServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Information_Rates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InformationServer).Rates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.Information/Rates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InformationServer).Rates(ctx, req.(*RatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Information_BreezAppVersions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BreezAppVersionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InformationServer).BreezAppVersions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.Information/BreezAppVersions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InformationServer).BreezAppVersions(ctx, req.(*BreezAppVersionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Information_ReceiverInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReceiverInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InformationServer).ReceiverInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.Information/ReceiverInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InformationServer).ReceiverInfo(ctx, req.(*ReceiverInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Information_serviceDesc = grpc.ServiceDesc{
	ServiceName: "breez.Information",
	HandlerType: (*InformationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Information_Ping_Handler,
		},
		{
			MethodName: "Rates",
			Handler:    _Information_Rates_Handler,
		},
		{
			MethodName: "BreezAppVersions",
			Handler:    _Information_BreezAppVersions_Handler,
		},
		{
			MethodName: "ReceiverInfo",
			Handler:    _Information_ReceiverInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "breez.proto",
}

// ChannelOpenerClient is the client API for ChannelOpener service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChannelOpenerClient interface {
	LSPList(ctx context.Context, in *LSPListRequest, opts ...grpc.CallOption) (*LSPListReply, error)
	OpenLSPChannel(ctx context.Context, in *OpenLSPChannelRequest, opts ...grpc.CallOption) (*OpenLSPChannelReply, error)
	RegisterPayment(ctx context.Context, in *RegisterPaymentRequest, opts ...grpc.CallOption) (*RegisterPaymentReply, error)
	CheckChannels(ctx context.Context, in *CheckChannelsRequest, opts ...grpc.CallOption) (*CheckChannelsReply, error)
}

type channelOpenerClient struct {
	cc grpc.ClientConnInterface
}

func NewChannelOpenerClient(cc grpc.ClientConnInterface) ChannelOpenerClient {
	return &channelOpenerClient{cc}
}

func (c *channelOpenerClient) LSPList(ctx context.Context, in *LSPListRequest, opts ...grpc.CallOption) (*LSPListReply, error) {
	out := new(LSPListReply)
	err := c.cc.Invoke(ctx, "/breez.ChannelOpener/LSPList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelOpenerClient) OpenLSPChannel(ctx context.Context, in *OpenLSPChannelRequest, opts ...grpc.CallOption) (*OpenLSPChannelReply, error) {
	out := new(OpenLSPChannelReply)
	err := c.cc.Invoke(ctx, "/breez.ChannelOpener/OpenLSPChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelOpenerClient) RegisterPayment(ctx context.Context, in *RegisterPaymentRequest, opts ...grpc.CallOption) (*RegisterPaymentReply, error) {
	out := new(RegisterPaymentReply)
	err := c.cc.Invoke(ctx, "/breez.ChannelOpener/RegisterPayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *channelOpenerClient) CheckChannels(ctx context.Context, in *CheckChannelsRequest, opts ...grpc.CallOption) (*CheckChannelsReply, error) {
	out := new(CheckChannelsReply)
	err := c.cc.Invoke(ctx, "/breez.ChannelOpener/CheckChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChannelOpenerServer is the server API for ChannelOpener service.
type ChannelOpenerServer interface {
	LSPList(context.Context, *LSPListRequest) (*LSPListReply, error)
	OpenLSPChannel(context.Context, *OpenLSPChannelRequest) (*OpenLSPChannelReply, error)
	RegisterPayment(context.Context, *RegisterPaymentRequest) (*RegisterPaymentReply, error)
	CheckChannels(context.Context, *CheckChannelsRequest) (*CheckChannelsReply, error)
}

// UnimplementedChannelOpenerServer can be embedded to have forward compatible implementations.
type UnimplementedChannelOpenerServer struct {
}

func (*UnimplementedChannelOpenerServer) LSPList(ctx context.Context, req *LSPListRequest) (*LSPListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LSPList not implemented")
}
func (*UnimplementedChannelOpenerServer) OpenLSPChannel(ctx context.Context, req *OpenLSPChannelRequest) (*OpenLSPChannelReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenLSPChannel not implemented")
}
func (*UnimplementedChannelOpenerServer) RegisterPayment(ctx context.Context, req *RegisterPaymentRequest) (*RegisterPaymentReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterPayment not implemented")
}
func (*UnimplementedChannelOpenerServer) CheckChannels(ctx context.Context, req *CheckChannelsRequest) (*CheckChannelsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckChannels not implemented")
}

func RegisterChannelOpenerServer(s *grpc.Server, srv ChannelOpenerServer) {
	s.RegisterService(&_ChannelOpener_serviceDesc, srv)
}

func _ChannelOpener_LSPList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LSPListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelOpenerServer).LSPList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.ChannelOpener/LSPList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelOpenerServer).LSPList(ctx, req.(*LSPListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChannelOpener_OpenLSPChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenLSPChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelOpenerServer).OpenLSPChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.ChannelOpener/OpenLSPChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelOpenerServer).OpenLSPChannel(ctx, req.(*OpenLSPChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChannelOpener_RegisterPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterPaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelOpenerServer).RegisterPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.ChannelOpener/RegisterPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelOpenerServer).RegisterPayment(ctx, req.(*RegisterPaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChannelOpener_CheckChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckChannelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChannelOpenerServer).CheckChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.ChannelOpener/CheckChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChannelOpenerServer).CheckChannels(ctx, req.(*CheckChannelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChannelOpener_serviceDesc = grpc.ServiceDesc{
	ServiceName: "breez.ChannelOpener",
	HandlerType: (*ChannelOpenerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LSPList",
			Handler:    _ChannelOpener_LSPList_Handler,
		},
		{
			MethodName: "OpenLSPChannel",
			Handler:    _ChannelOpener_OpenLSPChannel_Handler,
		},
		{
			MethodName: "RegisterPayment",
			Handler:    _ChannelOpener_RegisterPayment_Handler,
		},
		{
			MethodName: "CheckChannels",
			Handler:    _ChannelOpener_CheckChannels_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "breez.proto",
}

// PublicChannelOpenerClient is the client API for PublicChannelOpener service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PublicChannelOpenerClient interface {
	OpenPublicChannel(ctx context.Context, in *OpenPublicChannelRequest, opts ...grpc.CallOption) (*OpenPublicChannelReply, error)
}

type publicChannelOpenerClient struct {
	cc grpc.ClientConnInterface
}

func NewPublicChannelOpenerClient(cc grpc.ClientConnInterface) PublicChannelOpenerClient {
	return &publicChannelOpenerClient{cc}
}

func (c *publicChannelOpenerClient) OpenPublicChannel(ctx context.Context, in *OpenPublicChannelRequest, opts ...grpc.CallOption) (*OpenPublicChannelReply, error) {
	out := new(OpenPublicChannelReply)
	err := c.cc.Invoke(ctx, "/breez.PublicChannelOpener/OpenPublicChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PublicChannelOpenerServer is the server API for PublicChannelOpener service.
type PublicChannelOpenerServer interface {
	OpenPublicChannel(context.Context, *OpenPublicChannelRequest) (*OpenPublicChannelReply, error)
}

// UnimplementedPublicChannelOpenerServer can be embedded to have forward compatible implementations.
type UnimplementedPublicChannelOpenerServer struct {
}

func (*UnimplementedPublicChannelOpenerServer) OpenPublicChannel(ctx context.Context, req *OpenPublicChannelRequest) (*OpenPublicChannelReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenPublicChannel not implemented")
}

func RegisterPublicChannelOpenerServer(s *grpc.Server, srv PublicChannelOpenerServer) {
	s.RegisterService(&_PublicChannelOpener_serviceDesc, srv)
}

func _PublicChannelOpener_OpenPublicChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenPublicChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicChannelOpenerServer).OpenPublicChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.PublicChannelOpener/OpenPublicChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicChannelOpenerServer).OpenPublicChannel(ctx, req.(*OpenPublicChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PublicChannelOpener_serviceDesc = grpc.ServiceDesc{
	ServiceName: "breez.PublicChannelOpener",
	HandlerType: (*PublicChannelOpenerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OpenPublicChannel",
			Handler:    _PublicChannelOpener_OpenPublicChannel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "breez.proto",
}

// FundManagerClient is the client API for FundManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FundManagerClient interface {
	OpenChannel(ctx context.Context, in *OpenChannelRequest, opts ...grpc.CallOption) (*OpenChannelReply, error)
	UpdateChannelPolicy(ctx context.Context, in *UpdateChannelPolicyRequest, opts ...grpc.CallOption) (*UpdateChannelPolicyReply, error)
	AddFundInit(ctx context.Context, in *AddFundInitRequest, opts ...grpc.CallOption) (*AddFundInitReply, error)
	AddFundStatus(ctx context.Context, in *AddFundStatusRequest, opts ...grpc.CallOption) (*AddFundStatusReply, error)
	RemoveFund(ctx context.Context, in *RemoveFundRequest, opts ...grpc.CallOption) (*RemoveFundReply, error)
	RedeemRemovedFunds(ctx context.Context, in *RedeemRemovedFundsRequest, opts ...grpc.CallOption) (*RedeemRemovedFundsReply, error)
	GetSwapPayment(ctx context.Context, in *GetSwapPaymentRequest, opts ...grpc.CallOption) (*GetSwapPaymentReply, error)
	RegisterTransactionConfirmation(ctx context.Context, in *RegisterTransactionConfirmationRequest, opts ...grpc.CallOption) (*RegisterTransactionConfirmationResponse, error)
}

type fundManagerClient struct {
	cc grpc.ClientConnInterface
}

func NewFundManagerClient(cc grpc.ClientConnInterface) FundManagerClient {
	return &fundManagerClient{cc}
}

func (c *fundManagerClient) OpenChannel(ctx context.Context, in *OpenChannelRequest, opts ...grpc.CallOption) (*OpenChannelReply, error) {
	out := new(OpenChannelReply)
	err := c.cc.Invoke(ctx, "/breez.FundManager/OpenChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fundManagerClient) UpdateChannelPolicy(ctx context.Context, in *UpdateChannelPolicyRequest, opts ...grpc.CallOption) (*UpdateChannelPolicyReply, error) {
	out := new(UpdateChannelPolicyReply)
	err := c.cc.Invoke(ctx, "/breez.FundManager/UpdateChannelPolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fundManagerClient) AddFundInit(ctx context.Context, in *AddFundInitRequest, opts ...grpc.CallOption) (*AddFundInitReply, error) {
	out := new(AddFundInitReply)
	err := c.cc.Invoke(ctx, "/breez.FundManager/AddFundInit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fundManagerClient) AddFundStatus(ctx context.Context, in *AddFundStatusRequest, opts ...grpc.CallOption) (*AddFundStatusReply, error) {
	out := new(AddFundStatusReply)
	err := c.cc.Invoke(ctx, "/breez.FundManager/AddFundStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fundManagerClient) RemoveFund(ctx context.Context, in *RemoveFundRequest, opts ...grpc.CallOption) (*RemoveFundReply, error) {
	out := new(RemoveFundReply)
	err := c.cc.Invoke(ctx, "/breez.FundManager/RemoveFund", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fundManagerClient) RedeemRemovedFunds(ctx context.Context, in *RedeemRemovedFundsRequest, opts ...grpc.CallOption) (*RedeemRemovedFundsReply, error) {
	out := new(RedeemRemovedFundsReply)
	err := c.cc.Invoke(ctx, "/breez.FundManager/RedeemRemovedFunds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fundManagerClient) GetSwapPayment(ctx context.Context, in *GetSwapPaymentRequest, opts ...grpc.CallOption) (*GetSwapPaymentReply, error) {
	out := new(GetSwapPaymentReply)
	err := c.cc.Invoke(ctx, "/breez.FundManager/GetSwapPayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fundManagerClient) RegisterTransactionConfirmation(ctx context.Context, in *RegisterTransactionConfirmationRequest, opts ...grpc.CallOption) (*RegisterTransactionConfirmationResponse, error) {
	out := new(RegisterTransactionConfirmationResponse)
	err := c.cc.Invoke(ctx, "/breez.FundManager/RegisterTransactionConfirmation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FundManagerServer is the server API for FundManager service.
type FundManagerServer interface {
	OpenChannel(context.Context, *OpenChannelRequest) (*OpenChannelReply, error)
	UpdateChannelPolicy(context.Context, *UpdateChannelPolicyRequest) (*UpdateChannelPolicyReply, error)
	AddFundInit(context.Context, *AddFundInitRequest) (*AddFundInitReply, error)
	AddFundStatus(context.Context, *AddFundStatusRequest) (*AddFundStatusReply, error)
	RemoveFund(context.Context, *RemoveFundRequest) (*RemoveFundReply, error)
	RedeemRemovedFunds(context.Context, *RedeemRemovedFundsRequest) (*RedeemRemovedFundsReply, error)
	GetSwapPayment(context.Context, *GetSwapPaymentRequest) (*GetSwapPaymentReply, error)
	RegisterTransactionConfirmation(context.Context, *RegisterTransactionConfirmationRequest) (*RegisterTransactionConfirmationResponse, error)
}

// UnimplementedFundManagerServer can be embedded to have forward compatible implementations.
type UnimplementedFundManagerServer struct {
}

func (*UnimplementedFundManagerServer) OpenChannel(ctx context.Context, req *OpenChannelRequest) (*OpenChannelReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenChannel not implemented")
}
func (*UnimplementedFundManagerServer) UpdateChannelPolicy(ctx context.Context, req *UpdateChannelPolicyRequest) (*UpdateChannelPolicyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateChannelPolicy not implemented")
}
func (*UnimplementedFundManagerServer) AddFundInit(ctx context.Context, req *AddFundInitRequest) (*AddFundInitReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFundInit not implemented")
}
func (*UnimplementedFundManagerServer) AddFundStatus(ctx context.Context, req *AddFundStatusRequest) (*AddFundStatusReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFundStatus not implemented")
}
func (*UnimplementedFundManagerServer) RemoveFund(ctx context.Context, req *RemoveFundRequest) (*RemoveFundReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveFund not implemented")
}
func (*UnimplementedFundManagerServer) RedeemRemovedFunds(ctx context.Context, req *RedeemRemovedFundsRequest) (*RedeemRemovedFundsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RedeemRemovedFunds not implemented")
}
func (*UnimplementedFundManagerServer) GetSwapPayment(ctx context.Context, req *GetSwapPaymentRequest) (*GetSwapPaymentReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSwapPayment not implemented")
}
func (*UnimplementedFundManagerServer) RegisterTransactionConfirmation(ctx context.Context, req *RegisterTransactionConfirmationRequest) (*RegisterTransactionConfirmationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterTransactionConfirmation not implemented")
}

func RegisterFundManagerServer(s *grpc.Server, srv FundManagerServer) {
	s.RegisterService(&_FundManager_serviceDesc, srv)
}

func _FundManager_OpenChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FundManagerServer).OpenChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.FundManager/OpenChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FundManagerServer).OpenChannel(ctx, req.(*OpenChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FundManager_UpdateChannelPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateChannelPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FundManagerServer).UpdateChannelPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.FundManager/UpdateChannelPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FundManagerServer).UpdateChannelPolicy(ctx, req.(*UpdateChannelPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FundManager_AddFundInit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFundInitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FundManagerServer).AddFundInit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.FundManager/AddFundInit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FundManagerServer).AddFundInit(ctx, req.(*AddFundInitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FundManager_AddFundStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFundStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FundManagerServer).AddFundStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.FundManager/AddFundStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FundManagerServer).AddFundStatus(ctx, req.(*AddFundStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FundManager_RemoveFund_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveFundRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FundManagerServer).RemoveFund(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.FundManager/RemoveFund",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FundManagerServer).RemoveFund(ctx, req.(*RemoveFundRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FundManager_RedeemRemovedFunds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RedeemRemovedFundsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FundManagerServer).RedeemRemovedFunds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.FundManager/RedeemRemovedFunds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FundManagerServer).RedeemRemovedFunds(ctx, req.(*RedeemRemovedFundsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FundManager_GetSwapPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSwapPaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FundManagerServer).GetSwapPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.FundManager/GetSwapPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FundManagerServer).GetSwapPayment(ctx, req.(*GetSwapPaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FundManager_RegisterTransactionConfirmation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterTransactionConfirmationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FundManagerServer).RegisterTransactionConfirmation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.FundManager/RegisterTransactionConfirmation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FundManagerServer).RegisterTransactionConfirmation(ctx, req.(*RegisterTransactionConfirmationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FundManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "breez.FundManager",
	HandlerType: (*FundManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OpenChannel",
			Handler:    _FundManager_OpenChannel_Handler,
		},
		{
			MethodName: "UpdateChannelPolicy",
			Handler:    _FundManager_UpdateChannelPolicy_Handler,
		},
		{
			MethodName: "AddFundInit",
			Handler:    _FundManager_AddFundInit_Handler,
		},
		{
			MethodName: "AddFundStatus",
			Handler:    _FundManager_AddFundStatus_Handler,
		},
		{
			MethodName: "RemoveFund",
			Handler:    _FundManager_RemoveFund_Handler,
		},
		{
			MethodName: "RedeemRemovedFunds",
			Handler:    _FundManager_RedeemRemovedFunds_Handler,
		},
		{
			MethodName: "GetSwapPayment",
			Handler:    _FundManager_GetSwapPayment_Handler,
		},
		{
			MethodName: "RegisterTransactionConfirmation",
			Handler:    _FundManager_RegisterTransactionConfirmation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "breez.proto",
}

// SwapperClient is the client API for Swapper service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SwapperClient interface {
	AddFundInit(ctx context.Context, in *AddFundInitRequest, opts ...grpc.CallOption) (*AddFundInitReply, error)
	AddFundStatus(ctx context.Context, in *AddFundStatusRequest, opts ...grpc.CallOption) (*AddFundStatusReply, error)
	GetSwapPayment(ctx context.Context, in *GetSwapPaymentRequest, opts ...grpc.CallOption) (*GetSwapPaymentReply, error)
	RedeemSwapPayment(ctx context.Context, in *RedeemSwapPaymentRequest, opts ...grpc.CallOption) (*RedeemSwapPaymentReply, error)
	GetReverseRoutingNode(ctx context.Context, in *GetReverseRoutingNodeRequest, opts ...grpc.CallOption) (*GetReverseRoutingNodeReply, error)
}

type swapperClient struct {
	cc grpc.ClientConnInterface
}

func NewSwapperClient(cc grpc.ClientConnInterface) SwapperClient {
	return &swapperClient{cc}
}

func (c *swapperClient) AddFundInit(ctx context.Context, in *AddFundInitRequest, opts ...grpc.CallOption) (*AddFundInitReply, error) {
	out := new(AddFundInitReply)
	err := c.cc.Invoke(ctx, "/breez.Swapper/AddFundInit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *swapperClient) AddFundStatus(ctx context.Context, in *AddFundStatusRequest, opts ...grpc.CallOption) (*AddFundStatusReply, error) {
	out := new(AddFundStatusReply)
	err := c.cc.Invoke(ctx, "/breez.Swapper/AddFundStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *swapperClient) GetSwapPayment(ctx context.Context, in *GetSwapPaymentRequest, opts ...grpc.CallOption) (*GetSwapPaymentReply, error) {
	out := new(GetSwapPaymentReply)
	err := c.cc.Invoke(ctx, "/breez.Swapper/GetSwapPayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *swapperClient) RedeemSwapPayment(ctx context.Context, in *RedeemSwapPaymentRequest, opts ...grpc.CallOption) (*RedeemSwapPaymentReply, error) {
	out := new(RedeemSwapPaymentReply)
	err := c.cc.Invoke(ctx, "/breez.Swapper/RedeemSwapPayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *swapperClient) GetReverseRoutingNode(ctx context.Context, in *GetReverseRoutingNodeRequest, opts ...grpc.CallOption) (*GetReverseRoutingNodeReply, error) {
	out := new(GetReverseRoutingNodeReply)
	err := c.cc.Invoke(ctx, "/breez.Swapper/GetReverseRoutingNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SwapperServer is the server API for Swapper service.
type SwapperServer interface {
	AddFundInit(context.Context, *AddFundInitRequest) (*AddFundInitReply, error)
	AddFundStatus(context.Context, *AddFundStatusRequest) (*AddFundStatusReply, error)
	GetSwapPayment(context.Context, *GetSwapPaymentRequest) (*GetSwapPaymentReply, error)
	RedeemSwapPayment(context.Context, *RedeemSwapPaymentRequest) (*RedeemSwapPaymentReply, error)
	GetReverseRoutingNode(context.Context, *GetReverseRoutingNodeRequest) (*GetReverseRoutingNodeReply, error)
}

// UnimplementedSwapperServer can be embedded to have forward compatible implementations.
type UnimplementedSwapperServer struct {
}

func (*UnimplementedSwapperServer) AddFundInit(ctx context.Context, req *AddFundInitRequest) (*AddFundInitReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFundInit not implemented")
}
func (*UnimplementedSwapperServer) AddFundStatus(ctx context.Context, req *AddFundStatusRequest) (*AddFundStatusReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFundStatus not implemented")
}
func (*UnimplementedSwapperServer) GetSwapPayment(ctx context.Context, req *GetSwapPaymentRequest) (*GetSwapPaymentReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSwapPayment not implemented")
}
func (*UnimplementedSwapperServer) RedeemSwapPayment(ctx context.Context, req *RedeemSwapPaymentRequest) (*RedeemSwapPaymentReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RedeemSwapPayment not implemented")
}
func (*UnimplementedSwapperServer) GetReverseRoutingNode(ctx context.Context, req *GetReverseRoutingNodeRequest) (*GetReverseRoutingNodeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReverseRoutingNode not implemented")
}

func RegisterSwapperServer(s *grpc.Server, srv SwapperServer) {
	s.RegisterService(&_Swapper_serviceDesc, srv)
}

func _Swapper_AddFundInit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFundInitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwapperServer).AddFundInit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.Swapper/AddFundInit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwapperServer).AddFundInit(ctx, req.(*AddFundInitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Swapper_AddFundStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFundStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwapperServer).AddFundStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.Swapper/AddFundStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwapperServer).AddFundStatus(ctx, req.(*AddFundStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Swapper_GetSwapPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSwapPaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwapperServer).GetSwapPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.Swapper/GetSwapPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwapperServer).GetSwapPayment(ctx, req.(*GetSwapPaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Swapper_RedeemSwapPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RedeemSwapPaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwapperServer).RedeemSwapPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.Swapper/RedeemSwapPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwapperServer).RedeemSwapPayment(ctx, req.(*RedeemSwapPaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Swapper_GetReverseRoutingNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReverseRoutingNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwapperServer).GetReverseRoutingNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.Swapper/GetReverseRoutingNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwapperServer).GetReverseRoutingNode(ctx, req.(*GetReverseRoutingNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Swapper_serviceDesc = grpc.ServiceDesc{
	ServiceName: "breez.Swapper",
	HandlerType: (*SwapperServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddFundInit",
			Handler:    _Swapper_AddFundInit_Handler,
		},
		{
			MethodName: "AddFundStatus",
			Handler:    _Swapper_AddFundStatus_Handler,
		},
		{
			MethodName: "GetSwapPayment",
			Handler:    _Swapper_GetSwapPayment_Handler,
		},
		{
			MethodName: "RedeemSwapPayment",
			Handler:    _Swapper_RedeemSwapPayment_Handler,
		},
		{
			MethodName: "GetReverseRoutingNode",
			Handler:    _Swapper_GetReverseRoutingNode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "breez.proto",
}

// CTPClient is the client API for CTP service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CTPClient interface {
	JoinCTPSession(ctx context.Context, in *JoinCTPSessionRequest, opts ...grpc.CallOption) (*JoinCTPSessionResponse, error)
	TerminateCTPSession(ctx context.Context, in *TerminateCTPSessionRequest, opts ...grpc.CallOption) (*TerminateCTPSessionResponse, error)
}

type cTPClient struct {
	cc grpc.ClientConnInterface
}

func NewCTPClient(cc grpc.ClientConnInterface) CTPClient {
	return &cTPClient{cc}
}

func (c *cTPClient) JoinCTPSession(ctx context.Context, in *JoinCTPSessionRequest, opts ...grpc.CallOption) (*JoinCTPSessionResponse, error) {
	out := new(JoinCTPSessionResponse)
	err := c.cc.Invoke(ctx, "/breez.CTP/JoinCTPSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cTPClient) TerminateCTPSession(ctx context.Context, in *TerminateCTPSessionRequest, opts ...grpc.CallOption) (*TerminateCTPSessionResponse, error) {
	out := new(TerminateCTPSessionResponse)
	err := c.cc.Invoke(ctx, "/breez.CTP/TerminateCTPSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CTPServer is the server API for CTP service.
type CTPServer interface {
	JoinCTPSession(context.Context, *JoinCTPSessionRequest) (*JoinCTPSessionResponse, error)
	TerminateCTPSession(context.Context, *TerminateCTPSessionRequest) (*TerminateCTPSessionResponse, error)
}

// UnimplementedCTPServer can be embedded to have forward compatible implementations.
type UnimplementedCTPServer struct {
}

func (*UnimplementedCTPServer) JoinCTPSession(ctx context.Context, req *JoinCTPSessionRequest) (*JoinCTPSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinCTPSession not implemented")
}
func (*UnimplementedCTPServer) TerminateCTPSession(ctx context.Context, req *TerminateCTPSessionRequest) (*TerminateCTPSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TerminateCTPSession not implemented")
}

func RegisterCTPServer(s *grpc.Server, srv CTPServer) {
	s.RegisterService(&_CTP_serviceDesc, srv)
}

func _CTP_JoinCTPSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinCTPSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CTPServer).JoinCTPSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.CTP/JoinCTPSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CTPServer).JoinCTPSession(ctx, req.(*JoinCTPSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CTP_TerminateCTPSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TerminateCTPSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CTPServer).TerminateCTPSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.CTP/TerminateCTPSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CTPServer).TerminateCTPSession(ctx, req.(*TerminateCTPSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CTP_serviceDesc = grpc.ServiceDesc{
	ServiceName: "breez.CTP",
	HandlerType: (*CTPServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "JoinCTPSession",
			Handler:    _CTP_JoinCTPSession_Handler,
		},
		{
			MethodName: "TerminateCTPSession",
			Handler:    _CTP_TerminateCTPSession_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "breez.proto",
}

// NodeInfoClient is the client API for NodeInfo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeInfoClient interface {
	SetNodeInfo(ctx context.Context, in *SetNodeInfoRequest, opts ...grpc.CallOption) (*SetNodeInfoResponse, error)
	GetNodeInfo(ctx context.Context, in *GetNodeInfoRequest, opts ...grpc.CallOption) (*GetNodeInfoResponse, error)
}

type nodeInfoClient struct {
	cc grpc.ClientConnInterface
}

func NewNodeInfoClient(cc grpc.ClientConnInterface) NodeInfoClient {
	return &nodeInfoClient{cc}
}

func (c *nodeInfoClient) SetNodeInfo(ctx context.Context, in *SetNodeInfoRequest, opts ...grpc.CallOption) (*SetNodeInfoResponse, error) {
	out := new(SetNodeInfoResponse)
	err := c.cc.Invoke(ctx, "/breez.NodeInfo/SetNodeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeInfoClient) GetNodeInfo(ctx context.Context, in *GetNodeInfoRequest, opts ...grpc.CallOption) (*GetNodeInfoResponse, error) {
	out := new(GetNodeInfoResponse)
	err := c.cc.Invoke(ctx, "/breez.NodeInfo/GetNodeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeInfoServer is the server API for NodeInfo service.
type NodeInfoServer interface {
	SetNodeInfo(context.Context, *SetNodeInfoRequest) (*SetNodeInfoResponse, error)
	GetNodeInfo(context.Context, *GetNodeInfoRequest) (*GetNodeInfoResponse, error)
}

// UnimplementedNodeInfoServer can be embedded to have forward compatible implementations.
type UnimplementedNodeInfoServer struct {
}

func (*UnimplementedNodeInfoServer) SetNodeInfo(ctx context.Context, req *SetNodeInfoRequest) (*SetNodeInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetNodeInfo not implemented")
}
func (*UnimplementedNodeInfoServer) GetNodeInfo(ctx context.Context, req *GetNodeInfoRequest) (*GetNodeInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodeInfo not implemented")
}

func RegisterNodeInfoServer(s *grpc.Server, srv NodeInfoServer) {
	s.RegisterService(&_NodeInfo_serviceDesc, srv)
}

func _NodeInfo_SetNodeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetNodeInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeInfoServer).SetNodeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.NodeInfo/SetNodeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeInfoServer).SetNodeInfo(ctx, req.(*SetNodeInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeInfo_GetNodeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeInfoServer).GetNodeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.NodeInfo/GetNodeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeInfoServer).GetNodeInfo(ctx, req.(*GetNodeInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeInfo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "breez.NodeInfo",
	HandlerType: (*NodeInfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetNodeInfo",
			Handler:    _NodeInfo_SetNodeInfo_Handler,
		},
		{
			MethodName: "GetNodeInfo",
			Handler:    _NodeInfo_GetNodeInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "breez.proto",
}

// SyncNotifierClient is the client API for SyncNotifier service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SyncNotifierClient interface {
	RegisterPeriodicSync(ctx context.Context, in *RegisterPeriodicSyncRequest, opts ...grpc.CallOption) (*RegisterPeriodicSyncResponse, error)
}

type syncNotifierClient struct {
	cc grpc.ClientConnInterface
}

func NewSyncNotifierClient(cc grpc.ClientConnInterface) SyncNotifierClient {
	return &syncNotifierClient{cc}
}

func (c *syncNotifierClient) RegisterPeriodicSync(ctx context.Context, in *RegisterPeriodicSyncRequest, opts ...grpc.CallOption) (*RegisterPeriodicSyncResponse, error) {
	out := new(RegisterPeriodicSyncResponse)
	err := c.cc.Invoke(ctx, "/breez.SyncNotifier/RegisterPeriodicSync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SyncNotifierServer is the server API for SyncNotifier service.
type SyncNotifierServer interface {
	RegisterPeriodicSync(context.Context, *RegisterPeriodicSyncRequest) (*RegisterPeriodicSyncResponse, error)
}

// UnimplementedSyncNotifierServer can be embedded to have forward compatible implementations.
type UnimplementedSyncNotifierServer struct {
}

func (*UnimplementedSyncNotifierServer) RegisterPeriodicSync(ctx context.Context, req *RegisterPeriodicSyncRequest) (*RegisterPeriodicSyncResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterPeriodicSync not implemented")
}

func RegisterSyncNotifierServer(s *grpc.Server, srv SyncNotifierServer) {
	s.RegisterService(&_SyncNotifier_serviceDesc, srv)
}

func _SyncNotifier_RegisterPeriodicSync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterPeriodicSyncRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncNotifierServer).RegisterPeriodicSync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.SyncNotifier/RegisterPeriodicSync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncNotifierServer).RegisterPeriodicSync(ctx, req.(*RegisterPeriodicSyncRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SyncNotifier_serviceDesc = grpc.ServiceDesc{
	ServiceName: "breez.SyncNotifier",
	HandlerType: (*SyncNotifierServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterPeriodicSync",
			Handler:    _SyncNotifier_RegisterPeriodicSync_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "breez.proto",
}

// PushTxNotifierClient is the client API for PushTxNotifier service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PushTxNotifierClient interface {
	RegisterTxNotification(ctx context.Context, in *PushTxNotificationRequest, opts ...grpc.CallOption) (*PushTxNotificationResponse, error)
}

type pushTxNotifierClient struct {
	cc grpc.ClientConnInterface
}

func NewPushTxNotifierClient(cc grpc.ClientConnInterface) PushTxNotifierClient {
	return &pushTxNotifierClient{cc}
}

func (c *pushTxNotifierClient) RegisterTxNotification(ctx context.Context, in *PushTxNotificationRequest, opts ...grpc.CallOption) (*PushTxNotificationResponse, error) {
	out := new(PushTxNotificationResponse)
	err := c.cc.Invoke(ctx, "/breez.PushTxNotifier/RegisterTxNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PushTxNotifierServer is the server API for PushTxNotifier service.
type PushTxNotifierServer interface {
	RegisterTxNotification(context.Context, *PushTxNotificationRequest) (*PushTxNotificationResponse, error)
}

// UnimplementedPushTxNotifierServer can be embedded to have forward compatible implementations.
type UnimplementedPushTxNotifierServer struct {
}

func (*UnimplementedPushTxNotifierServer) RegisterTxNotification(ctx context.Context, req *PushTxNotificationRequest) (*PushTxNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterTxNotification not implemented")
}

func RegisterPushTxNotifierServer(s *grpc.Server, srv PushTxNotifierServer) {
	s.RegisterService(&_PushTxNotifier_serviceDesc, srv)
}

func _PushTxNotifier_RegisterTxNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushTxNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushTxNotifierServer).RegisterTxNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.PushTxNotifier/RegisterTxNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushTxNotifierServer).RegisterTxNotification(ctx, req.(*PushTxNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PushTxNotifier_serviceDesc = grpc.ServiceDesc{
	ServiceName: "breez.PushTxNotifier",
	HandlerType: (*PushTxNotifierServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterTxNotification",
			Handler:    _PushTxNotifier_RegisterTxNotification_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "breez.proto",
}

// InactiveNotifierClient is the client API for InactiveNotifier service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InactiveNotifierClient interface {
	InactiveNotify(ctx context.Context, in *InactiveNotifyRequest, opts ...grpc.CallOption) (*InactiveNotifyResponse, error)
}

type inactiveNotifierClient struct {
	cc grpc.ClientConnInterface
}

func NewInactiveNotifierClient(cc grpc.ClientConnInterface) InactiveNotifierClient {
	return &inactiveNotifierClient{cc}
}

func (c *inactiveNotifierClient) InactiveNotify(ctx context.Context, in *InactiveNotifyRequest, opts ...grpc.CallOption) (*InactiveNotifyResponse, error) {
	out := new(InactiveNotifyResponse)
	err := c.cc.Invoke(ctx, "/breez.InactiveNotifier/InactiveNotify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InactiveNotifierServer is the server API for InactiveNotifier service.
type InactiveNotifierServer interface {
	InactiveNotify(context.Context, *InactiveNotifyRequest) (*InactiveNotifyResponse, error)
}

// UnimplementedInactiveNotifierServer can be embedded to have forward compatible implementations.
type UnimplementedInactiveNotifierServer struct {
}

func (*UnimplementedInactiveNotifierServer) InactiveNotify(ctx context.Context, req *InactiveNotifyRequest) (*InactiveNotifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InactiveNotify not implemented")
}

func RegisterInactiveNotifierServer(s *grpc.Server, srv InactiveNotifierServer) {
	s.RegisterService(&_InactiveNotifier_serviceDesc, srv)
}

func _InactiveNotifier_InactiveNotify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InactiveNotifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InactiveNotifierServer).InactiveNotify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.InactiveNotifier/InactiveNotify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InactiveNotifierServer).InactiveNotify(ctx, req.(*InactiveNotifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _InactiveNotifier_serviceDesc = grpc.ServiceDesc{
	ServiceName: "breez.InactiveNotifier",
	HandlerType: (*InactiveNotifierServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InactiveNotify",
			Handler:    _InactiveNotifier_InactiveNotify_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "breez.proto",
}

// SignerClient is the client API for Signer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SignerClient interface {
	SignUrl(ctx context.Context, in *SignUrlRequest, opts ...grpc.CallOption) (*SignUrlResponse, error)
}

type signerClient struct {
	cc grpc.ClientConnInterface
}

func NewSignerClient(cc grpc.ClientConnInterface) SignerClient {
	return &signerClient{cc}
}

func (c *signerClient) SignUrl(ctx context.Context, in *SignUrlRequest, opts ...grpc.CallOption) (*SignUrlResponse, error) {
	out := new(SignUrlResponse)
	err := c.cc.Invoke(ctx, "/breez.Signer/SignUrl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SignerServer is the server API for Signer service.
type SignerServer interface {
	SignUrl(context.Context, *SignUrlRequest) (*SignUrlResponse, error)
}

// UnimplementedSignerServer can be embedded to have forward compatible implementations.
type UnimplementedSignerServer struct {
}

func (*UnimplementedSignerServer) SignUrl(ctx context.Context, req *SignUrlRequest) (*SignUrlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignUrl not implemented")
}

func RegisterSignerServer(s *grpc.Server, srv SignerServer) {
	s.RegisterService(&_Signer_serviceDesc, srv)
}

func _Signer_SignUrl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignUrlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignerServer).SignUrl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/breez.Signer/SignUrl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignerServer).SignUrl(ctx, req.(*SignUrlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Signer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "breez.Signer",
	HandlerType: (*SignerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignUrl",
			Handler:    _Signer_SignUrl_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "breez.proto",
}
